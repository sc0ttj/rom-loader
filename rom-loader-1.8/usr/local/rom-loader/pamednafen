#!/bin/sh

{
# enable joypad rom browsing
rejoystick1cc --load --profile romloader &>/dev/null
rejoystick2cc --load --profile romloader &>/dev/null

#make some shortcuts. Most for easy typing, but also for flexibility
export WORKDIR=$HOME/.paloader/tmp
export CONFIG=$HOME/.paloader/pamednafenrc
# set some vars as defaults
export FULLGUI=''
export FSGUI=''
export FULLSCREENGUI='';
export DECORATED='decorated="true"'
export EMURC=/root/.mednafen/mednafen.cfg
export SYSTITLE="Multi System"

# get system we are emulating for, it will determine the title, rom path, rc file, file extensions, etc
export SELF="`basename "$0"`"
# for the build_chooser function, used by this script to browse files and dirs
export EXT_LIST="\.zip$|\.gba$|\.gb$|\.gbc$|\.smd$|\.md$|\.gen$|\.gg$|\.sms$|\.ngp$|\.ngc$|\.bin$|\.fig$|\.lnx$|\.cue$|\.ws$|\.wsc$"  # goes in a `grep -iE "$EXT_LIST"` command to filter out unwanted filetypes in build_chooser_list, keep only those listed
# get the guiname .. can use it to create game specific configs for each backend
export SELF="`basename "$0"`"
# $SYSTEM is used by func_build_chooser_list to choose the correct pupromdb file and descr dir
SYSTEM="`cat /root/.paloader/rclist.txt |grep -m1 \"|${SELF}$\" |cut -f1 -d'|'`" #example: snes or atari2600 or pce
#now we need to make it upper case
export SYSTEM="${SYSTEM^^}" # ... note "${SYSTEM,,}" would force lower case
export ROMFILE=$ROMFILE # the file to load up on program start

# set command line options
while [ $# != 0 ]; do
   I=1
   while [ $I -le `echo $# | wc -c` ]; do
      case $1 in
         -rom) [ -f "$2" ] && ROMFILE="$2" || ROMFILE='' ;;
         -fgui) FULLGUI="true";;
         -f|--fullscreen) FSGUI="-f "; FULLSCREENGUI="--class=jwm-maximized"; DECORATED="decorated=\"false\"";;
         -v|--version)echo "pamednafen $VERSION"; exit;;
         -h|--help)
echo 'Usage: pamednafen [OPTION]

Options
  -romfile	    Load up the given rom on program startup (give full path)
  -f    Start the rom loader GUI in fullscreen
  -h    Show this help message'; exit;;
         #if the given option is a file, assign to $ROMFILE, we will autoload it
         *) [ -f "$1" ] && ROMFILE="$1";;
      esac
      shift
      I=$[$I+1]
   done
done

}

#check if config exists
if [ ! -f $CONFIG ]; then #no config - set default values
	mkdir -p $WORKDIR 2> /dev/null
	DIR="$HOME" #default browser dir
	GBADIR="$HOME" 
	GAMEGEARDIR="$HOME" 
	SMSDIR="$HOME" 
	LYNXDIR="$HOME" 
	GENDIR="$HOME" 
	NESDIR="$HOME" 
	NGPDIR="$HOME" 
	PCEDIR="$HOME" 
	PCFXDIR="$HOME" 
	PSXDIR="$HOME" 
	SNESDIR="$HOME" 
	VBDIR="$HOME" 
	WSWANDIR="$HOME" 
	FULLSCREEN=Yes
	FILTER=Default
	ASPECTRATIO="4:3"
	STRETCH=Default
	RES=800x600
	VIDDRIVER=Default
	OPENGLFILTER=Default
	VSYNC=Default
	FRAMESKIP=Default
	SCANLINES=Default
	BLUR=Default
	BILINEAR=Default
	SOUND=true
	SNDDRV=OSS
	SOUNDVOL=100
	SYNCSOUND=Yes
	AUTOSAVE=Default
	TAGS=""
else
	. $CONFIG #read config file
fi

#get settings from main rom loader settings file, for theme settings and other stuff
export RCFILE=$HOME/.paloader/paloader.cfg
if [ -f "$RCFILE" ];then
	 . "$RCFILE"
fi



#####     F U N C T I O N S     ######
{
set -a #export all functions

# get rom loader functions
. /usr/local/rom-loader/func/func_get_resolution 			#get screen res
. /usr/local/rom-loader/func/func_set_theme					# adjust font sizes based on screen res
. /usr/local/rom-loader/func/func_sanitise_romname		# clean up rom names to be searchable
. /usr/local/rom-loader/func/func_build_chooser_list 		# needs SYSTEM and EXT_LIST set & exported near top of this file
. /usr/local/rom-loader/func/func_browser_go_to_dir		# file browsing
. /usr/local/rom-loader/func/func_browser_change_dir	# file browsing
. /usr/local/rom-loader/func/func_set_custom_config	# get the custom cfg for the current rom
. /usr/local/rom-loader/func/func_popup							# popup dialog when user lodas up a rom
. /usr/local/rom-loader/func/func_file_check 					# set boxart ($IMG_FILE), desc file,
. /usr/local/rom-loader/func/func_set_gui_height			# fill screen height
. /usr/local/rom-loader/func/func_kill_rejoystick				# a nicer way to end joypad navigation control
#for bottom panel
. /usr/local/rom-loader/func/func_get_rom_descr 			# needs $CHOOSER, sets $desc_file
. /usr/local/rom-loader/func/func_set_rom_descr 			# needs $DIR$CHOOSER and $desc_file
. /usr/local/rom-loader/func/func_edit_rom_details 		#needs $romname
. /usr/local/rom-loader/func/func_get_rom_boxart 		#needs $romname, sets $IMG_FILE
. /usr/local/rom-loader/func/func_set_rom_boxart 		#needs $IMG_FILE

write_config () {
	#write all variable values to config file
	echo '#pamednafen config file' > $CONFIG
	echo DIR="\"$DIR\""	 >> $CONFIG
	# keep all dirs for each system the same (if not running for a system, it wont have it dir reset)
	echo GBADIR="\"$GBADIR\""  >> $CONFIG
	echo GAMEGEARDIR="\"$GAMEGEARDIR\""  >> $CONFIG
	echo SMSDIR="\"$SMSDIR\""  >> $CONFIG
	echo LYNXDIR="\"$LYNXDIR\""  >> $CONFIG
	echo GENDIR="\"$GENDIR\""  >> $CONFIG
	echo NESDIR="\"$NESDIR\"" >> $CONFIG 
	echo NGPDIR="\"$NGPDIR\"" >> $CONFIG 
	echo PCEDIR="\"$PCEDIR\""  >> $CONFIG
	echo PCFXDIR="\"$PCFXDIR\"" >> $CONFIG 
	echo PSXDIR="\"$PSXDIR\""  >> $CONFIG
	echo SNESDIR="\"$SNESDIR\""  >> $CONFIG
	echo VBDIR="\"$VBDIR\""  >> $CONFIG
	echo WSWANDIR="\"$WSWANDIR\""  >> $CONFIG
	# now update the current system with last used dir (remove value from above, and update)
	case "$SELF" in 
		pamedgba) echo "`cat \"$CONFIG\" | grep -v '^GBADIR='`" > $CONFIG; echo GBADIR="\"$DIR\"" >> $CONFIG ;;
		pamedagb)  echo "`cat \"$CONFIG\" | grep -v '^GBDIR='`" > $CONFIG; echo GBDIR="\"$DIR\"" >> $CONFIG ;;
		pamedgg) echo "`cat \"$CONFIG\" | grep -v '^GAMEGEARDIR='`" > $CONFIG; echo GAMEGEARDIR="\"$DIR\"" >> $CONFIG ;;
		pamedlynx) echo "`cat \"$CONFIG\" | grep -v '^LYNXDIR='`" > $CONFIG; echo LYNXDIR="\"$DIR\"" >> $CONFIG ;;
		pamedgen) echo "`cat \"$CONFIG\" | grep -v '^GENDIR='`" > $CONFIG; echo GENDIR="\"$DIR\"" >> $CONFIG ;;
		pamednes) echo "`cat \"$CONFIG\" | grep -v '^NESDIR='`" > $CONFIG; echo NESDIR="\"$DIR\"" >> $CONFIG ;;
		pamedngp) echo "`cat \"$CONFIG\" | grep -v '^NGPDIR='`" > $CONFIG; echo NGPDIR="\"$DIR\"" >> $CONFIG ;;
		pamedpce) echo "`cat \"$CONFIG\" | grep -v '^PCEDIR='`" > $CONFIG; echo PCEDIR="\"$DIR\"" >> $CONFIG ;;
		pamedpcfx) echo "`cat \"$CONFIG\" | grep -v '^PCFXDIR='`" > $CONFIG; echo PCFXDIR="\"$DIR\"" >> $CONFIG ;;
		pamedpsx)  echo "`cat \"$CONFIG\" | grep -v '^PSXDIR='`" > $CONFIG; echo PSXDIR="\"$DIR\"" >> $CONFIG ;;
		pamedsms) echo "`cat \"$CONFIG\" | grep -v '^SMSDIR='`" > $CONFIG; echo SMSDIR="\"$DIR\"" >> $CONFIG ;;
		pamedsnes) echo "`cat \"$CONFIG\" | grep -v '^SNESDIR='`" > $CONFIG; echo SNESDIR="\"$DIR\"" >> $CONFIG ;;
		pamedvb) echo "`cat \"$CONFIG\" | grep -v '^VBDIR='`" > $CONFIG; echo VBDIR="\"$DIR\"" >> $CONFIG ;;
		pamedwswan) echo "`cat \"$CONFIG\" | grep -v '^WSWANDIR='`" > $CONFIG; echo WSWANDIR="\"$DIR\"" >> $CONFIG ;;
	esac
	#
	echo FULLSCREEN="$FULLSCREEN" >> $CONFIG
	echo FILTER="$FILTER" >> $CONFIG
	echo ASPECTRATIO="$ASPECTRATIO" >> $CONFIG
	echo STRETCH="$STRETCH" >> $CONFIG
	echo RES="$RES" >> $CONFIG
	echo VIDDRIVER="$VIDDRIVER" >> $CONFIG
	echo OPENGLFILTER="$OPENGLFILTER" >> $CONFIG
	echo VSYNC="$VSYNC" >> $CONFIG
	echo FRAMESKIP="$FRAMESKIP" >> $CONFIG
	echo SCANLINES="$SCANLINES" >> $CONFIG
	echo BLUR="$BLUR" >> $CONFIG
	echo BILINEAR="$BILINEAR" >> $CONFIG
	echo SOUND=$SOUND >> $CONFIG
	echo SOUNDVOL=$SOUNDVOL >> $CONFIG
	echo SNDDRV="$SNDDRV" >> $CONFIG
	echo SYNCSOUND="$SYNCSOUND" >> $CONFIG
	echo AUTOSAVE="$AUTOSAVE" >> $CONFIG
	echo TAGS="\"$TAGS\"" >> $CONFIG
	
	# here, we do 2 things: we get the custom config for any backends NOT being used, 
	# starting with first in list, goind down (see backend menus in Settings page), 
	# if a cfg for a non-enabled backend exists, that backend is used to auto load the rom with those custom settings
	# if no custom configs exist for non used backends, get the custom config for the currently enabled backend
	# we do this so users can set custom settings AND emulators for each ROM..
	set_custom_config
	
}

execute (){
	export GTK2_RC_FILES="$HOME/.gtkrc-2.0"	#reset gtk-theme

	#mednafen only supports cue files for psx
	if [ "$SELF" = "pamedpsx" ];then
		#auto create cue files... this is needed if user tries to load up an ISO without a cue file
		export CUEFILE="FILE \"$CHOOSER\" BINARY
  TRACK 01 MODE2/2352
	INDEX 01 00:00:00"
		CHOOSER="${CHOOSER//.iso/.cue}"
		CHOOSER="${CHOOSER//.bin/.cue}"
		[ ! -f "${DIR}${CHOOSER}" ] && echo "$CUEFILE" > "$DIR${CHOOSER}"
    fi

	write_config #keep settings for next startup

	#fullscreen
	[ "$FULLSCREEN" = "Yes" ] && C="--video.fs 1" || C="--video.fs 0"
	
	# display filters - none hq2x hq3x hq4x scale2x scale3x scale4x 2xsai super2xsai supereagle nn2x nn3x nn4x nny2x nny3x nny4x
	[ "$FILTER" != "Default" -a "$FILTER" != "" ] && C="$C --cdplay.special $FILTER --gb.special $FILTER --gba.special $FILTER --gg.special $FILTER --lynx.special $FILTER --md.special $FILTER --nes.special $FILTER --ngp.special $FILTER --pce.special $FILTER --pce_fast.special $FILTER --pcfx.special $FILTER --player.special $FILTER --psx.special $FILTER --sms.special $FILTER --snes.special $FILTER --vb.special $FILTER --wswan.special $FILTER"
	
	#aspectratio
	[ "$ASPECTRATIO" = "Yes" ] && C="$C --md.correct_aspect 1 --pce_fast.correct_aspect 1"
	
	#STRETCH stuff here - 0 full aspect aspect_int aspect_mult2
	[ "$STRETCH" = "none" ] && STRETCH="0"
	[ "$STRETCH" != "Default" -a "$STRETCH" != "" ] && C="$C --cdplay.stretch $STRETCH --gb.stretch $STRETCH --gba.stretch $STRETCH --gg.stretch $STRETCH --lynx.stretch $STRETCH --md.stretch $STRETCH --nes.stretch $STRETCH --ngp.stretch $STRETCH --pce.stretch $STRETCH --pce_fast.stretch $STRETCH --pcfx.stretch $STRETCH --player.stretch $STRETCH --psx.stretch $STRETCH --sms.stretch $STRETCH --snes.stretch $STRETCH --vb.stretch $STRETCH --wswan.stretch $STRETCH"
	
	#RESOLUTION stuff here
	for SYS in cdplay gb gba gg lynx md nes ngp pce pce_fast pcfx player psx sms snes vb wswan
	do
		case $RES in
		320x224) C="$C --${SYS}.xres 320  --${SYS}.yres 224" ;;
		320x240) C="$C --${SYS}.xres 320  --${SYS}.yres 240" ;;
		512x240) C="$C --${SYS}.xres 512  --${SYS}.yres 240" ;;
		512x384) C="$C --${SYS}.xres 512  --${SYS}.yres 384" ;;
		640x480) C="$C --${SYS}.xres 640  --${SYS}.yres 480" ;;
		800x600) C="$C --${SYS}.xres 800  --${SYS}.yres 600" ;;
		960x720) C="$C --${SYS}.xres 960  --${SYS}.yres 720" ;;
		1024x600) C="$C --${SYS}.xres 1024  --${SYS}.yres 600" ;;
		1024x768) C="$C --${SYS}.xres 1024  --${SYS}.yres 768" ;;
		2048x1024) C="$C --${SYS}.xres 2048  --${SYS}.yres 1024" ;;
		esac
	done	
	
	#vid driver
	[ "$VIDDRIVER" != "Default" ] && C="$C --video.driver $VIDDRIVER"
	
	#opengl filter
	[ "$OPENGLFILTER" != "Default" ] && C="$C --cdplay.pixshader $OPENGLFILTER --gb.pixshader $OPENGLFILTER --gba.pixshader $OPENGLFILTER --gg.pixshader $OPENGLFILTER --lynx.pixshader $OPENGLFILTER --md.pixshader $OPENGLFILTER --nes.pixshader $OPENGLFILTER --ngp.pixshader $OPENGLFILTER --pce.pixshader $OPENGLFILTER --pce_fast.pixshader $OPENGLFILTER --pcfx.pixshader $OPENGLFILTER --player.pixshader $OPENGLFILTER --psx.pixshader $OPENGLFILTER --sms.pixshader $OPENGLFILTER --snes.pixshader $OPENGLFILTER --vb.pixshader $OPENGLFILTER --wswan.pixshader $OPENGLFILTER"

	#VSYNC
	#auto fix bad options
	[ "$VIDDRVER" != "opengl" ] && VSYNC=No
	[ "$VSYNC" = "Yes" ] && C="$C --video.glvsync 1" || C="$C --video.glvsync 0"
	
	#FRAMESKIP stuff here
	[ "$FRAMESKIP" = "Yes" ] && C="$C --video.frameskip 1" 
	
	#scanlines 
	[ "$SCANLINES" = "Yes" ] && C="$C --cdplay.scanlines 1 --gb.scanlines 1 --gba.scanlines 1 --gg.scanlines 1 --lynx.scanlines 1 --md.scanlines 1 --nes.scanlines 1 --ngp.scanlines 1 --pce.scanlines 1 --pce_fast.scanlines 1 --pcfx.scanlines 1 --player.scanlines 1 --psx.scanlines 1 --sms.scanlines 1 --snes.scanlines 1 --vb.scanlines 1 --wswan.scanlines 1"
	
	#blur
	[ "$BLUR" = "Yes" ] && C="$C --cdplay.tblur 1 --gb.tblur 1 --gba.tblur 1 --gg.tblur 1 --lynx.tblur 1 --md.tblur 1 --nes.tblur 1 --ngp.tblur 1 --pce.tblur 1 --pce_fast.tblur 1 --pcfx.tblur 1 --player.tblur 1 --psx.tblur 1 --sms.tblur 1 --snes.tblur 1 --vb.tblur 1 --wswan.tblur 1"
	
	#bilinear
	[ "$BILINEAR" != "Default" -a "$BILINEAR" != "" ] && C="$C --cdplay.videoip $BILINEAR --gb.videoip $BILINEAR --gba.videoip $BILINEAR --gg.videoip $BILINEAR --lynx.videoip $BILINEAR --md.videoip $BILINEAR --nes.videoip $BILINEAR --ngp.videoip $BILINEAR --pce.videoip $BILINEAR --pce_fast.videoip $BILINEAR --pcfx.videoip $BILINEAR --player.videoip $BILINEAR --psx.videoip $BILINEAR --sms.videoip $BILINEAR --snes.videoip $BILINEAR --vb.videoip $BILINEAR --wswan.videoip $BILINEAR"
	
	#sound stuff
	[ "$SOUND" = false ] && C="$C --sound 0" || C="$C --sound 1"  ## no longer needed, editing config file directly

	#sound vol
	[ "$SOUNDVOL" != "Default" -a  "$SOUNDVOL" != "100"  ] && C="$C --sound.volume $SOUNDVOL"
	
	#sound driver - --sound.driver
	[ "$SNDDRV" != "Default" ] && C="$C --sound.driver $SNDDRV"
	
	#sync sound (throttle, needs sound disabled to work) --nothrottle
	[ "$SYNCSOUND" = "Yes" ] && C="$C --nothrottle 0" || C="$C --nothrottle 1" 
	
	#autosave
	[ "$AUTOSAVE" = "Yes" ] && C="$C --autosave 1" || C="$C --autosave 0" 
	
	
	# enable joypad rom browsing
	rejoystick1cc --load --profile mednafen &>/dev/null
	rejoystick2cc --load --profile mednafen &>/dev/null
	unclutter -idle 1 -jitter 6 -reset -root &

   	# THE ACTUAL, FINAL COMMAND
	mkdir -p /tmp/paloader
	echo "mednafen $C $TAGS \"$DIR${CHOOSER}\""  > /tmp/paloader/${SELF}_cmd
	. /tmp/paloader/${SELF}_cmd &> /tmp/paloader/${SELF}_cmd_output
	
	# enable joypad rom browsing
	rejoystick1cc --load --profile romloader &>/dev/null
	rejoystick2cc --load --profile romloader &>/dev/null
	killall -9 unclutter &>/dev/null

}

}

#####     P R O G R A M     ######
{

#define a unique gtk-theme. This can be built really fancy. See /usr/share/themes/DeepThought/gtk-2.0/gtkrc.
#Pmusic and Pburn uses this tecnique
cat "/root/.paloader/themes/${THEME:-$MAIN_THEME}" > /tmp/gtkrc

#get the screen res .. this will also set TITLESIZE and SUBTITELSIZE, 
# which are font sizes we update on the fly in theme files
get_resolution 
#now we update the font sizes based on current resolution
# set_theme will replace the font sizes in /tmp/gtkrc and then set the theme
set_theme 

. /usr/local/rom-loader/func/func_get_bios					# get bios files
case "$SELF" in 
	pamedgba) EXT_LIST="\.zip$|\.gb$|\.gba$|\.gbc$"; SYSTEM=GBA; THEME="$GBA_THEME"; ROMICON="cartridge_gameboy"; SYSTITLE="GameBoy Advance"; DIR="${GBADIR:-$HOME}" ;;
	pamedgb) EXT_LIST="\.zip$|\.gb$|\.gba$|\.gbc$";SYSTEM=GBA; THEME="$GBA_THEME"; ROMICON="cartridge_gameboy";  SYSTITLE="GameBoy"; DIR="${GBADIR:-$HOME}" ;;
	pamedgg) EXT_LIST="\.zip$|\.gg$";SYSTEM=GAMEGEAR; THEME="$SEGA8BIT_THEME"; ROMICON="cartridge_gamegear"; SYSTITLE="GameGear"; DIR="${GAMEGEARDIR:-$HOME}" ;;
	pamedlynx) EXT_LIST="\.zip$|\.lnx$|\.lynx$";SYSTEM=ATARILYNX; THEME="$ATARI_THEME"; ROMICON="cartridge_atarilynx"; SYSTITLE="Atari Lynx"; DIR="${LYNXDIR:-$HOME}"; [ ! -f /usr/lib/games/atari/atariosa.rom ] && get_bios_atari ;;
	pamedgen) EXT_LIST="\.zip$|\.smd$|\.md$|\.gen$|\.bin$|\.fig$";SYSTEM=GEN; THEME="$GENESIS_THEME"; ROMICON="cartridge_genesis"; SYSTITLE="Genesis"; DIR="${GENDIR:-$HOME}" ;;
	pamednes) EXT_LIST="\.zip$|\.nes$|\.fds$";SYSTEM=NES; THEME="$NES_THEME"; ROMICON="cartridge_nes"; SYSTITLE="NES"; DIR="${NESDIR:-$HOME}" ;;
	pamedngp) EXT_LIST="\.zip$|\.ngp$|\.ngc$";SYSTEM=NGP; THEME="$NGP_THEME"; ROMICON="cartridge_ngp"; SYSTITLE="NeoGeoPocket"; DIR="${NGPDIR:-$HOME}" ;;
	pamedpce) EXT_LIST="\.zip$|\.pce$";SYSTEM=PCE; THEME="$PCE_THEME"; ROMICON="cartridge_pce"; SYSTITLE="PC-Engine"; DIR="${PCEDIR:-$HOME}" ; [ ! -f '/usr/lib/games/pce/CD-ROM System V3.01.pce' ] && get_bios_pce ;;
	pamedpcfx) EXT_LIST="\.cue$";SYSTEM=PCFX; THEME="$PCFX_THEME"; ROMICON="rom"; SYSTITLE="PC-FX"; DIR="${PCFXDIR:-$HOME}" ; [ ! -f /usr/lib/games/pcfx/pcfx.rom ] && get_bios_pcfx ;;
	pamedpsx)  EXT_LIST="\.cue$";SYSTEM=PSX; THEME="$PSX_THEME"; ROMICON="cartridge_psx"; SYSTITLE="PlayStation"; DIR="${PSXDIR:-$HOME}" ; [ ! -f /usr/lib/games/psx/scph5501.bin ] && get_bios_psx ;;
	pamedsms) EXT_LIST="\.zip$|\.sms$";SYSTEM=SMS; THEME="$SEGA8BIT_THEME"; ROMICON="cartridge_sms"; SYSTITLE="Master System"; DIR="${SMSDIR:-$HOME}" ;;
	pamedsnes) EXT_LIST="\.zip$|\.smc$|\.bin$|\.fig$";SYSTEM=SNES; THEME="$SNES_THEME"; ROMICON="cartridge_snes"; SYSTITLE="SNES"; DIR="${SNESDIR:-$HOME}" ;;
	pamedvb) EXT_LIST="\.zip$|\.vb$";SYSTEM=VB; THEME="$VB_THEME"; ROMICON="cartridge_vb"; SYSTITLE="VirtualBoy"; DIR="${VBDIR:-$HOME}" ;;
	pamedwswan) EXT_LIST="\.zip$|\.ws$|\.wsc$";SYSTEM=WSWAN; THEME="$WSWAN_THEME"; ROMICON="cartridge_wswan"; SYSTITLE="WonderSwan"; DIR="${WSWANDIR:-$HOME}" ;;
	*) SYSTEM=ALL; THEME="$MAIN_THEME"; ROMICON="rom"; SYSTITLE="Multi-System"; DIR="${DIR:-$HOME}" ;;
esac
export EXT_LIST
export SYSTEM
export THEME
export ROMICON
export SYSTITLE
export DIR

#define default directory in browser
echo "$DIR" > $WORKDIR/dir
ls -1p --group-directories-first "$DIR" > $WORKDIR/ls
browser_go_to_dir

#set default text in info-field
echo -e 'Select a valid ROM the browser and execute' > $WORKDIR/info
# set the default puppy arcade box art
rm /root/.paloader/tmp/boxart.jpg &>/dev/null
ln -s /usr/share/paloader/romlists/boxart/default.jpg /root/.paloader/tmp/boxart.jpg

# set the height to full height of screen if run with -if/--fullscreen
set_gui_height

# auto run the given rom ($ROMFILE)
if [ -f "$ROMFILE" ];then #if rom was given
	# set the required vars to locate the rom
	export DIR="`dirname \"$ROMFILE\"`/"
	export CHOOSER="`basename \"$ROMFILE\"`"
	# load up the rom
	execute
	kill_rejoystick
	exit
fi

}

#get comboboxes
. /usr/local/rom-loader/combobox_arrays/pamednafen

# create the file browsing gui stuff ... do it here cos gui_height and so has to be set first...
. /usr/local/rom-loader/func/func_build_chooser_gui
# usage:  build_chooser_gui $boxart_width $boxart_height
build_chooser_gui 280 200

#build gui
S='
<window title="Puppy Arcade - Mednafen loader ('$SYSTITLE')" icon-name="gtk-execute" allow-shrink="true" allow-grow="true" '$DECORATED' width-request="'$SCREEN_WIDTH'" height-request="'$SCREEN_HEIGHT'">
 <vbox>

		<entry visible="false">
		<variable>GBADIR</variable>
		<default>"'$GBADIR'"</default>
		<visible>disabled</visible>
		</entry>

		<entry visible="false">
		<variable>SMSDIR</variable>
		<default>"'$SMSDIR'"</default>
		<visible>disabled</visible>
		</entry>

		<entry visible="false">
		<variable>GAMEGEARDIR</variable>
		<default>"'$GAMEGEARDIR'"</default>
		<visible>disabled</visible>
		</entry>

		<entry visible="false">
		<variable>LYNXDIR</variable>
		<default>"'$LYNXDIR'"</default>
		<visible>disabled</visible>
		</entry>

		<entry visible="false">
		<variable>GENDIR</variable>
		<default>"'$GENDIR'"</default>
		<visible>disabled</visible>
		</entry>

		<entry visible="false">
		<variable>NESDIR</variable>
		<default>"'$NESDIR'"</default>
		<visible>disabled</visible>
		</entry>

		<entry visible="false">
		<variable>NGPDIR</variable>
		<default>"'$NGPDIR'"</default>
		<visible>disabled</visible>
		</entry>

		<entry visible="false">
		<variable>PCEDIR</variable>
		<default>"'$PCEDIR'"</default>
		<visible>disabled</visible>
		</entry>

		<entry visible="false">
		<variable>PCFXDIR</variable>
		<default>"'$PCFXDIR'"</default>
		<visible>disabled</visible>
		</entry>

		<entry visible="false">
		<variable>PSXDIR</variable>
		<default>"'$PSXDIR'"</default>
		<visible>disabled</visible>
		</entry>

		<entry visible="false">
		<variable>SNESDIR</variable>
		<default>"'$SNESDIR'"</default>
		<visible>disabled</visible>
		</entry>

		<entry visible="false">
		<variable>VBDIR</variable>
		<default>"'$VBDIR'"</default>
		<visible>disabled</visible>
		</entry>

		<entry visible="false">
		<variable>WSWANDIR</variable>
		<default>"'$WSWANDIR'"</default>
		<visible>disabled</visible>
		</entry>

  <notebook labels="ROMs|Settings|Help">

## E X E C U T E

 '$CHOOSER_GUI'

## S E T T I N G S

<vbox>
	<notebook labels="Graphics|Sound|Other Stuff">
	<frame>

		<hbox>
			<text><label>Fullscreen:</label></text>
			<combobox tooltip-text="Auto load at fullscreen" width-request="100">
			<variable>FULLSCREEN</variable>
				'$FULLSCREEN_ITEMS'
			</combobox>
			<text height-request="5"><label>""</label></text>

			<text><label>Fullscreen Resolution:</label></text>
			<combobox tooltip-text="Choose a fullscreen resolution. The *Scale to Fit* option must be disabled for this to work." width-request="100">
			<variable>RES</variable>
				'$RES_ITEMS'
			</combobox>
			<text width-request="30"><label>""</label></text>
		</hbox>

		<text height-request="5"><label>""</label></text>

		<hbox>
			<text height-request="5"><label>""</label></text>
			<text><label>Aspect Ratio:</label></text>
			<combobox tooltip-text="more options for stretching the output to make it bigger or smaller" width-request="150">
			<variable>STRETCH</variable>
				'$STRETCH_ITEMS'
			</combobox>

			<text><label>Fix Aspect Ratio:</label></text>
			<combobox tooltip-text="Choose the aspect ratio (screen proportions) .. Only for Genesis and PCE_fast" width-request="100">
			<variable>ASPECTRATIO</variable>
				'$ASPECTRATIO_ITEMS'
			</combobox>
			<text width-request="30"><label>""</label></text>
		</hbox>

		<text height-request="5"><label>""</label></text>

		<hbox>
			<text><label>Video Driver:</label></text>
			<combobox tooltip-text="Choose a video driver to use for graphics, opengl is faster but you need 3d acceleration enabled" width-request="100">
			<variable>VIDDRIVER</variable>
				'$VIDDRIVER_ITEMS'
			</combobox>
			<text width-request="10"><label>""</label></text>

			<text><label>OpenGL Filter:</label></text>
			<combobox tooltip-text="the Video Driver option must be set to opengl, for this filter option to work" width-request="100">
			<variable>OPENGLFILTER</variable>
				'$OPENGLFILTER_ITEMS'
			</combobox>
			<text width-request="30"><label>""</label></text>
		</hbox>
	
		<text height-request="5"><label>""</label></text>

		<hbox>
		<text width-request="5"><label>""</label></text>
			<text><label>Filter:</label></text>
			<combobox tooltip-text="Choose a graphics filter to produce different looks, some may reduce the game speed and need good hardware" width-request="125">
			<variable>FILTER</variable>
				'$FILTER_ITEMS'
			</combobox>
			<text width-request="40"><label>""</label></text>

			<text><label>Scanlines:</label></text>
			<combobox tooltip-text="make lines across the screen, a kind of TV effect, may increase performance" width-request="100">
			<variable>SCANLINES</variable>
				'$SCANLINES_ITEMS'
			</combobox>
			<text width-request="30"><label>""</label></text>
		</hbox>

		<text height-request="5"><label>""</label></text>

		<hbox>
			<text width-request="5"><label>""</label></text>
			<text><label>Bilinear:</label></text>
			<combobox tooltip-text="If Yes, this makes the graphics look smoother" width-request="100">
			<variable>BILINEAR</variable>
				'$BILINEAR_ITEMS'
			</combobox>
			<text width-request="65"><label>""</label></text>
			<text><label>VSync:</label></text>
			<combobox tooltip-text="If Yes, the game updates with the refresh rate of the monitor or display. NOTE: requires the OpenGL Video Driver" width-request="100">
			<variable>VSYNC</variable>
				'$VSYNC_ITEMS'
			</combobox>
			<text width-request="30"><label>""</label></text>
		</hbox>

		<text height-request="5"><label>""</label></text>

		<hbox>

			<text width-request="5"><label>""</label></text>
			<text><label>Frame Blur:</label></text>
			<combobox tooltip-text="Choose how much frame blur to do, more requires better hardware" width-request="125">
			<variable>BLUR</variable>
				'$BLUR_ITEMS'
			</combobox>
			<text width-request="30"><label>""</label></text>
			<text><label>FrameSkip:</label></text>
			<combobox tooltip-text="If Yes, this might speed up games but make them less smooth" width-request="100">
			<variable>FRAMESKIP</variable>
				'$FRAMESKIP_ITEMS'
			</combobox>
			<text width-request="30"><label>""</label></text>
		</hbox>
	</frame>

	<frame>
		<hbox>
			<checkbox>
				<label>Enable Sound</label>
				<variable>SOUND</variable>
				<default>"'$SOUND'"</default>
			</checkbox>
			<text width-request="30"><label>""</label></text>

			<text><label>Sound Driver:</label></text>
			<combobox tooltip-text="Choose a hardware thing, or none">
			<variable>SNDDRV</variable>
				'$SNDDRV_ITEMS'
			</combobox>
			<text width-request="30"><label>""</label></text>
		</hbox>

		<text height-request="5"><label>""</label></text>

		<hbox>
			<text><label>Sync w/ Sound:</label></text>
			<combobox tooltip-text="Disable speed throttling when sound is disabled. So, if disabled there will be no speed throttling - games will run as fast as possible, however for this option to work, Sound MUST be disabled." width-request="100">
			<variable>SYNCSOUND</variable>
				'$SYNCSOUND_ITEMS'
			</combobox>
			<text width-request="30"><label>""</label></text>
			<text><label>Volume:</label></text>
			<combobox tooltip-text="In percent, higher is louder" width-request="100">
			<variable>SOUNDVOL</variable>
				'$SOUNDVOL_ITEMS'
			</combobox>
			<text width-request="30"><label>""</label></text>
		</hbox>
	</frame>

	<frame>
		<hbox>
			<text><label>Auto Save:</label></text>
			<combobox tooltip-text="Automatically save and load save states when a game is closed or loaded, respectively" width-request="100">
			<variable>AUTOSAVE</variable>
				'$AUTOSAVE_ITEMS'
			</combobox>
			<text width-request="30"><label>""</label></text>
		</hbox>

		<text height-request="5"><label>""</label></text>

		<hbox>
			<text><label>"Custom options"</label></text>
			<entry editable="true" left_margin="10" tooltip-text="See the file /usr/share/docs/mednafen/mednafen.txt for full help options">
			<variable>TAGS</variable>
			<default>"'$TAGS'"</default>
			</entry>
			<text width-request="30"><label>""</label></text>
		</hbox>
	</frame>

	</notebook>

</vbox>


## H E L P
  <vbox>
	<edit can-focus="no" editable="false" indent="15">
		<variable>EDITOR</variable>
		<width>250</width><height>350</height>
		<default>"Mednafen Help:
=======================
Mednafen Controls:

F12				Quit the game
-----------------------------------------------------

Player 1 in-game Controls (for all systems unless stated below):

D-Pad		W,A,S,D

V			Button B / Button 1
B			Button A / Button 2
F			Button B / Button 1 (autofire)
G			Button A / Button 2 (autofire)
C			L shoulder button
N			R shoulder button
Enter		Start button
R-Shift		Select button


Wonderswan controls as above, plus...
2nd D-Pad	T,F,G,H

NeoGeo Pocket controls:

V			Button A
B			Button B
Enter		Options button

PC-Engine and PC-FX controls:

V			Button III
B			Button II
N			Button I
F			Button IV
G			Button V
H			Button VI
-			Button I (autofire)
-			Button II (autofire)
Enter		Run

Mednafen Emulator Controls:

Alt-Enter		Toggle fullscreen

F1			Main Emulator Menu
F2			Configure Emulator Commands
Alt-Shft-1	Configure Pad1
Alt-Shft-2	Configure Pad2
Alt-Shft-3	Configure Pad3
Alt-Shft-4	Configure Pad4
Ctrl-Shft-1	Switch Pad1 device
Ctrl-Shft-2	Switch Pad2 device
Ctrl-Shft-3	Switch Pad3 device
Ctrl-Shft-4	Switch Pad4 device
F5			Save state
F6			Select Disk
F7			Load state
F8			Insert coin / Eject Disk
F11			Reset the game
F12			Quit the game
Escape		Quit the game

All settings above can be configured through the F1 menu

The settings are saved in '$EMURC'"</default>
	</edit>		
  </vbox>

 </notebook>


## B U T T O N S

	<hbox>
		<button use-stock="true" label="gtk-save" tootlip-text="Save your emulator settings">
			<variable>SAVE_SETTINGS</variable>
			<action>write_config; Xdialog --title "Settings Saved" --msgbox "Settings saved to $CONFIG" 0 0</action>
		</button>
		<button use-stock="true" label="gtk-help" tooltip-text="View all usage options for this emulator">
		    <action>defaulttexteditor /usr/share/doc/snes/readme.txt &</action>	
		</button>
		<button use-stock="true" label="gtk-quit" tooltip-text="Exit this frontend">
			<action>if [ "$FULLGUI" != "" ];then exec paloader -sk '$FSGUI' & sleep 0.6; fi</action>
			<action type="exit">EXIT_NOW</action>
		</button>
	</hbox>
 </vbox>
</window>'

export pamednafen="`echo "$S" | sed -e 's/##.*//'`"  #I use double hash (##) for comments. Colors are defined as #FF0000
gtkdialog3 -p pamednafen $FULLSCREENGUI # $FULLSCREENGUI contains (or not) --class=jwm-maximized and must be defined in jwm configuration to get window maximized
unset pamednafen

# if NOT returning to the main menu ($FULLGUI=""), remove the rejoystick profile.. kill it to be safe... 
# and then we must use xdotool to quit the output of the joypad when rejoystick exits.. 
# if we dont do this, rejoystick/the joypad floods the next process/app/etc with a load of keypresses
if [ "$FULLGUI" = "" ];then
	kill_rejoystick
fi

exit 0
