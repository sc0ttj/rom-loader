#!/bin/sh

###### initial setup vars and cli interface #####
{
# enable joypad rom browsing
rejoystick1cc --load --profile romloader &>/dev/null
rejoystick2cc --load --profile romloader &>/dev/null

#get settigns for this gui
export WORKDIR=$HOME/.paloader/tmp
export CONFIG=$HOME/.paloader/pasnesrc
# set some vars as defaults for pasnes command line interface
export FULLGUI=''
export FSGUI=''
export FULLSCREENGUI='';
export DECORATED='decorated="true"'

##
# for the build_chooser function, used by this script to browse files and dirs
export EXT_LIST="\.zip$|\.smc$|\.sfc$|\.swc$|\.bin$|\.fig$"  # goes in a `grep -iE "$EXT_LIST"` command to filter out unwanted filetypes in build_chooser_list, keep only those listed
# get the guiname .. can use it to create game specific configs for each backend
export SELF="`basename "$0"`"
# $SYSTEM is used by func_build_chooser_list to choose the correct pupromdb file and descr dir
SYSTEM="`cat /root/.paloader/rclist.txt |grep -m1 \"|${SELF}$\" |cut -f1 -d'|'`" #example: snes or atari2600 or pce
#now we need to make it upper case
export SYSTEM="${SYSTEM^^}" # ... note "${SYSTEM,,}" would force lower case
export ROMFILE='' # the file to load up on program start
export ROMICON='cartridge_snes' # the icon file in /usr/share/pixmaps/ to use for this system

# set command line options
while [ $# != 0 ]; do
   I=1
   while [ $I -le `echo $# | wc -c` ]; do
      case $1 in
         -rom) [ -f "$2" ] && ROMFILE="$2" || ROMFILE='' ;;
         -fgui) FULLGUI="true";;
         -f|--fullscreen) FSGUI="-f "; FULLSCREENGUI="--class=jwm-maximized"; DECORATED="decorated=\"false\"";;
         -v|--version)echo "pasnes $VERSION"; exit;;
         -h|--help)
echo 'Usage: pasnes [OPTION]

Options
  -romfile	    Load up the given rom on program startup (give full path)
  -f    		Start the rom loader GUI in fullscreen
  -h    		Show this help message'; exit;;
         #if the given option is a file, assign to $ROMFILE, we will autoload it
         *) [ -f "$1" ] && ROMFILE="$1";;
      esac
      shift
      I=$[$I+1]
   done
done

}

######  load config file or defaults #####
{
#check if config exists
if [ ! -f $CONFIG ]; then #no config - set default values
	mkdir -p $WORKDIR 2> /dev/null
	DIR="$HOME" #default browser dir
	FULLSCREEN=Yes
	FILTER="Default"
	KEEPASPECTRATIO=Yes
	ASPECTRATIO="8:7-Square-pixel"
	MULTITHREAD=Yes
	SCALETOFIT=Yes
	RES=1024x768
	HWACCEL=Yes
	VSYNC=Yes
	BILINEAR=No
	SOUND=true
	SNDDRV=OSS
	SYNCSOUND=Yes
	TAGS=""
else
	. $CONFIG #read config file
fi

#get settings from main rom loader settings file, for theme settings and other stuff
export RCFILE=$HOME/.paloader/paloader.cfg
if [ -f "$RCFILE" ];then
	 . "$RCFILE"
fi
}

#####     F U N C T I O N S     ######
{
set -a #export all functions

# get rom loader functions
. /usr/local/rom-loader/func/func_get_resolution 			#get screen res
. /usr/local/rom-loader/func/func_set_theme					# adjust font sizes based on screen res
. /usr/local/rom-loader/func/func_sanitise_romname		# clean up rom names to be searchable
. /usr/local/rom-loader/func/func_build_chooser_list 		# needs SYSTEM and EXT_LIST set & exported near top of this file
. /usr/local/rom-loader/func/func_browser_go_to_dir		# file browsing
. /usr/local/rom-loader/func/func_browser_change_dir	# file browsing
. /usr/local/rom-loader/func/func_set_custom_config	# get the custom cfg for the current rom
. /usr/local/rom-loader/func/func_popup							# popup dialog when user lodas up a rom
. /usr/local/rom-loader/func/func_file_check 					# set boxart ($IMG_FILE), desc file,
. /usr/local/rom-loader/func/func_set_gui_height			# fill screen height
. /usr/local/rom-loader/func/func_kill_rejoystick				# a nicer way to end joypad navigation control
#for bottom panel
. /usr/local/rom-loader/func/func_get_rom_descr 			# needs $CHOOSER, sets $desc_file
. /usr/local/rom-loader/func/func_set_rom_descr 			# needs $DIR$CHOOSER and $desc_file
. /usr/local/rom-loader/func/func_edit_rom_details 		#needs $romname
. /usr/local/rom-loader/func/func_get_rom_boxart 		#needs $romname, sets $IMG_FILE
. /usr/local/rom-loader/func/func_set_rom_boxart 		#needs $IMG_FILE

write_config () {
	#write all variable values to config file
	echo '#pasnes config file' > $CONFIG
	echo DIR="\"$DIR\""	 >> $CONFIG
	echo FULLSCREEN="$FULLSCREEN" >> $CONFIG
	echo FILTER="$FILTER" >> $CONFIG
	echo KEEPASPECTRATIO="$KEEPASPECTRATIO" >> $CONFIG
	echo ASPECTRATIO="$ASPECTRATIO" >> $CONFIG
	echo MULTITHREAD="$MULTITHREAD" >> $CONFIG
	echo SCALETOFIT="$SCALETOFIT" >> $CONFIG
	echo RES="$RES" >> $CONFIG
	echo HWACCEL="$HWACCEL" >> $CONFIG
	echo VSYNC="$VSYNC" >> $CONFIG
	echo BILINEAR="$BILINEAR" >> $CONFIG
	echo SOUND=$SOUND >> $CONFIG
	echo SNDDRV="$SNDDRV" >> $CONFIG
	echo SYNCSOUND="$SYNCSOUND" >> $CONFIG
	echo TAGS="\"$TAGS\"" >> $CONFIG
	
	# here, we do 2 things: we get the custom config for any backends NOT being used, 
	# starting with first in list, goind down (see backend menus in Settings page), 
	# if a cfg for a non-enabled backend exists, that backend is used to auto load the rom with those custom settings
	# if no custom configs exist for non used backends, get the custom config for the currently enabled backend
	# we do this so users can set custom settings AND emulators for each ROM..
	set_custom_config
	
	## update the snes9x xml file itself now, no other choice, it has no other cli options to set
	if [ "$FULLSCREEN" = "Yes" ];then
		sed -i 's/full_screen_on_open" value="0"\/>/full_screen_on_open" value="1"\/>/' /root/.snes9x/snes9x.xml
		sed -i 's/fullscreen" value="0"\/>/fullscreen" value="1"\/>/' /root/.snes9x/snes9x.xml
	else
		sed -i 's/full_screen_on_open" value="1"\/>/full_screen_on_open" value="0"\/>/' /root/.snes9x/snes9x.xml
		sed -i 's/fullscreen" value="1"\/>/fullscreen" value="0"\/>/' /root/.snes9x/snes9x.xml
	fi
	
	#keep aspect ratio
	if [ "$KEEPASPECTRATIO" = "No" ];then
		sed -i 's/name="maintain_aspect_ratio" value="1"/name="maintain_aspect_ratio" value="0"/' /root/.snes9x/snes9x.xml
	else
		sed -i 's/name="maintain_aspect_ratio" value="0"/name="maintain_aspect_ratio" value="1"/' /root/.snes9x/snes9x.xml
	fi
	
	#aspect ratio
	if [ "$ASPECTRATIO" = "8:7-Square-pixel" ];then
		sed -i 's/name="aspect_ratio" value="1"/name="aspect_ratio" value="0"/' /root/.snes9x/snes9x.xml
	else
		sed -i 's/name="aspect_ratio" value="0"/name="aspect_ratio" value="1"/' /root/.snes9x/snes9x.xml
	fi
	
	#multithreading
	if [ "$MULTITHREAD" = "No" ];then
		sed -i 's/name="multithreading" value="1"/name="multithreading" value="0"/' /root/.snes9x/snes9x.xml
	else
		sed -i 's/name="multithreading" value="0"/name="multithreading" value="1"/' /root/.snes9x/snes9x.xml
	fi

	#set resolution
	case $RES in 
	640x480) 	RESW=640 RESH=480;;
	800x600) 	RESW=800 RESH=600;;
	1024x600)	RESW=1024 RESH=600;;
	1024x768)	RESW=1024 RESH=768;;
	2048x1024) RESW=2048 RESH=1024;;
	esac
	#get old resolution
	OLDVIDWIDTH=`grep -w video_mode_width /root/.snes9x/snes9x.xml | cut -f4 -d'"'`
	OLDWINWIDTH=`grep -w window_width /root/.snes9x/snes9x.xml | cut -f4 -d'"'`
	OLDVIDHEIGHT=`grep -w video_mode_height /root/.snes9x/snes9x.xml | cut -f4 -d'"'`
	OLDWINHEIGHT=`grep -w window_height /root/.snes9x/snes9x.xml | cut -f4 -d'"'`
	#update config file, resolution
	sed -i "s/video_mode_width\" value=\"$OLDVIDWIDTH\"/video_mode_width\" value=\"$RESW\"/" /root/.snes9x/snes9x.xml
	sed -i "s/video_mode_height\" value=\"$OLDVIDHEIGHT\"/video_mode_height\" value=\"$RESH\"/" /root/.snes9x/snes9x.xml
	#update config file, set window size
	echo $OLDVIDWIDTH
	sed -i "s/window_width\" value=\"$OLDWINWIDTH\"/window_width\" value=\"$RESW\"/" /root/.snes9x/snes9x.xml
	sed -i "s/window_height\" value=\"$OLDWINHEIGHT\"/window_height\" value=\"$RESH\"/" /root/.snes9x/snes9x.xml

	#scale to fit window
	if [ "$SCALETOFIT" = "No" ];then
		sed -i 's/name="scale_to_fit" value="1"/name="scale_to_fit" value="0"/' /root/.snes9x/snes9x.xml
	else
		sed -i 's/name="scale_to_fit" value="0"/name="scale_to_fit" value="1"/' /root/.snes9x/snes9x.xml
	fi
	
	#filter/scaling method
	case "$FILTER" in 
	None) FILTERVAR=0	;;
	SuperEagle) FILTERVAR=1	;;
	2xSai) FILTERVAR=2	;;
	Super2xSai) FILTERVAR=3	;;
	HQ2x) FILTERVAR=4	;;
	HQ3x) FILTERVAR=5	;;
	HQ4x) FILTERVAR=6	;;
	EPX) FILTERVAR=7	;;
	EPX-Smooth) FILTERVAR=8	;;
	NTSC) FILTERVAR=9	;;
	Scanlines) FILTERVAR=10	;;
	esac
	OLDFILTER=`grep -w scale_method /root/.snes9x/snes9x.xml | cut -f4 -d'"'`
	sed -i "s/name=\"scale_method\" value=\"$OLDFILTER\"/name=\"scale_method\" value=\"$FILTERVAR\"/" /root/.snes9x/snes9x.xml
	
	#use hardware acceleration
	case $HWACCEL in 
	None) 		HWVAR=0	;;
	XVideo)	HWVAR=2	;;
	OpenGL)	HWVAR=1	;;
	esac
	OLDHWACCEL=`grep -w hw_accel /root/.snes9x/snes9x.xml | cut -f4 -d'"'`
	sed -i "s/name=\"hw_accel\" value=\"$OLDHWACCEL\"/name=\"hw_accel\" value=\"$HWVAR\"/" /root/.snes9x/snes9x.xml

	#sound driver
	case $SNDDRV in 
	OSS)	SNDVAR=1 ;;
	SDL)	SNDVAR=2 ;;
	ALSA)	SNDVAR=3 ;;
	esac
	OLDSNDDRV=`grep -w sound_driver /root/.snes9x/snes9x.xml | cut -f4 -d'"'`
	sed -i "s/name=\"sound_driver\" value=\"$OLDSNDDRV\"/name=\"sound_driver\" value=\"$SNDVAR\"/g" /root/.snes9x/snes9x.xml
	
	#mute sound 
	if [ "$SOUND" = false ];then
		sed -i 's/name="mute_sound" value="0"/name="mute_sound" value="1"/' /root/.snes9x/snes9x.xml
	else
		sed -i 's/name="mute_sound" value="1"/name="mute_sound" value="0"/' /root/.snes9x/snes9x.xml
	fi

	#sync emu with sound 
	if [ "$SYNCSOUND" = "No" ];then
		sed -i 's/name="sound_sync" value="1"/name="sound_sync" value="0"/' /root/.snes9x/snes9x.xml
	else
		sed -i 's/name="sound_sync" value="0"/name="sound_sync" value="1"/' /root/.snes9x/snes9x.xml
	fi

	#sync with vblank
	if [ "$VSYNC" = "No" ];then
		sed -i 's/name="sync_to_vblank" value="1"/name="sync_to_vblank" value="0"/' /root/.snes9x/snes9x.xml
	else
		sed -i 's/name="sync_to_vblank" value="0"/name="sync_to_vblank" value="1"/' /root/.snes9x/snes9x.xml
	fi

	#bilinear
	if [ "$BILINEAR" = "No" ];then
		sed -i 's/name="bilinear_filter" value="1"/name="bilinear_filter" value="0"/' /root/.snes9x/snes9x.xml
	else
		sed -i 's/name="bilinear_filter" value="0"/name="bilinear_filter" value="1"/' /root/.snes9x/snes9x.xml
	fi

}

execute (){
	export GTK2_RC_FILES="$HOME/.gtkrc-2.0"	#reset gtk-theme
	
	write_config #keep settings for next startup/next game, write to config file

	# display filters
	if [ "$FILTER" = "SuperEagle" ];then
		C="-filter supereagle"
	elif [ "$FILTER" = "2xSai" ];then
		C="-filter 2xsai"
	elif [ "$FILTER" = "Super2xSai" ];then
		C="-filter super2xsai"
	elif [ "$FILTER" = "HQ2x" ];then
		C="-filter hq2x"
	elif [ "$FILTER" = "HQ3x" ];then
		C="-filter hq3x"
	elif [ "$FILTER" = "HQ4x" ];then
		C="-filter hq4x"
	elif [ "$FILTER" = "EPX" ];then
		C="-filter epx"
	elif [ "$FILTER" = "NTSC" ];then
		C="-filter ntsc"
	else
		C="-filter none"
	fi
	
	[ "$SOUND" = false ] && C="$C -mutesound"  ## no longer needed, editing config file directly

	#now after all that, if using snes9x (the cli version) instead of snes9x-gtk, 
	# we will disable all of those options, as it annoyingly has a totally different cli interface
	[ "$SNES_BACKEND" = "snes9x" ] && C=''

	# enable joypad rom browsing
	rejoystick1cc --load --profile snes9x &>/dev/null
	rejoystick2cc --load --profile snes9x &>/dev/null
	unclutter -idle 1 -jitter 6 -reset -root &

	 #this is the actual command
	 mkdir -p /tmp/paloader
	 echo "$SNES_BACKEND $C $TAGS \"$DIR$CHOOSER\"" > /tmp/paloader/${SELF}_cmd
	 . /tmp/paloader/${SELF}_cmd &> /tmp/paloader/${SELF}_cmd_output
	
	# enable joypad rom browsing
	rejoystick1cc --load --profile romloader &>/dev/null
	rejoystick2cc --load --profile romloader &>/dev/null
	killall -9 unclutter &>/dev/null

}

}

#####     P R O G R A M     ######
{

#define default directory in browser
echo "$DIR" > $WORKDIR/dir
ls -1p --group-directories-first "$DIR" > $WORKDIR/ls
browser_go_to_dir

#set default text in info-field
echo 'Select a valid ROM in the browser and execute' > $WORKDIR/info
# set the default puppy arcade box art
rm /root/.paloader/tmp/boxart.jpg &>/dev/null
ln -s /usr/share/paloader/romlists/boxart/default.jpg /root/.paloader/tmp/boxart.jpg

# set the height to full height of screen if run with -if/--fullscreen
set_gui_height

#define a unique gtk-theme. This can be built really fancy. See /usr/share/themes/DeepThought/gtk-2.0/gtkrc.
#Pmusic and Pburn uses this tecnique
cat "/root/.paloader/themes/${SNES_THEME:-$MAIN_THEME}" > /tmp/gtkrc

#get the screen res .. this will also set TITLESIZE and SUBTITELSIZE, 
# which are font sizes we update on the fly in theme files
get_resolution 
#now we update the font sizes based on current resolution
# set_theme will replace the font sizes in /tmp/gtkrc and then set the theme
set_theme

# auto run the given rom ($ROMFILE)
if [ -f "$ROMFILE" ];then #if rom was given
	# set the required vars to locate the rom
	export DIR="`dirname \"$ROMFILE\"`/"
	export CHOOSER="`basename \"$ROMFILE\"`"
	# load up the rom
	execute
	kill_rejoystick
	exit
fi

}

###### build gui #####
{
# get all arrays for combobox items
. /usr/local/rom-loader/combobox_arrays/`basename $0`

# create the file browsing gui stuff ... do it here cos gui_height and so has to be set first...
. /usr/local/rom-loader/func/func_build_chooser_gui
# usage:  build_chooser_gui $boxart_width $boxart_height
build_chooser_gui 280 200

#main gui
S='<window title="Puppy Arcade - SNES loader ('$SNES_BACKEND')" icon-name="gtk-execute" '$DECORATED' width-request="'$SCREEN_WIDTH'" height-request="'$SCREEN_HEIGHT'">
 <vbox>
  <notebook labels="ROMs|Settings|Help">

## E X E C U T E

 '$CHOOSER_GUI'

## S E T T I N G S

<vbox>
	<frame>

		<frame GRAPHICS OPTIONS>

			
			<hbox>
			<text><label>Fullscreen:</label></text>
			<combobox tooltip-text="Auto load at fullscreen" width-request="75">
			<variable>FULLSCREEN</variable>
				'$FULLSCREEN_ITEMS'
			</combobox>
			<text height-request="5"><label>""</label></text>
			<text><label>Resolution (windowed):</label></text>
			<combobox tooltip-text="Choose a graphics window size" width-request="100">
			<variable>RES</variable>
				'$RES_ITEMS'
			</combobox>
			<text width-request="30"><label>""</label></text>
			</hbox>

			<hbox>
			<text><label>Scale to Fit:</label></text>
			<combobox tooltip-text="Stretched the graphics to fit the window size" width-request="75">
			<variable>SCALETOFIT</variable>
				'$SCALETOFIT_ITEMS'
			</combobox>

			<text height-request="5"><label>""</label></text>
			<text><label>Multi-threaded Scaling:</label></text>
			<combobox tooltip-text="Enable multi threaded filters and scaling if you have dual core or more CPU" width-request="75">
			<variable>MULTITHREAD</variable>
				'$MULTITHREAD_ITEMS'
			</combobox>
			<text width-request="30"><label>""</label></text>
			</hbox>

			<hbox>
			<text><label>Keep Aspect Ratio:</label></text>
			<combobox tooltip-text="Keep the original aspect ratio (screen proportions)" width-request="75">
			<variable>KEEPASPECTRATIO</variable>
				'$KEEPASPECTRATIO_ITEMS'
			</combobox>
			<text width-request="5"><label>""</label></text>
			<text><label>Aspect Ratio:</label></text>
			<combobox tooltip-text="Choose the aspect ratio (screen proportions)">
			<variable>ASPECTRATIO</variable>
				'$ASPECTRATIO_ITEMS'
			</combobox>
			<text width-request="30"><label>""</label></text>
			</hbox>

			<text height-request="5"><label>""</label></text>
			<hbox>
			<text><label>Hardware Acceleration:</label></text>
			<combobox tooltip-text="Choose a hardware thing, or none" width-request="100">
			<variable>HWACCEL</variable>
				'$HWACCEL_ITEMS'
			</combobox>
			<text width-request="5"><label>""</label></text>
			<text><label>VSync:</label></text>
			<combobox tooltip-text="Is Yes, the game update with the refresh rate of the monitor or display" width-request="75">
			<variable>VSYNC</variable>
				'$VSYNC_ITEMS'
			</combobox>
			<text width-request="30"><label>""</label></text>
			</hbox>

			<text height-request="5"><label>""</label></text>
			<hbox>
			<text><label>Graphics filter:</label></text>
			<combobox tooltip-text="Choose a graphics filter. None is the fastest, NTSC emulates a kind of TV effect." width-request="125">
			<variable>FILTER</variable>
				'$FILTER_ITEMS'
			</combobox>
			<text><label>Bilinear Filtering:</label></text>
			<combobox tooltip-text="If enabled, this produces smoother looking graphics and textures." width-request="75">
			<variable>BILINEAR</variable>
				'$BILINEAR_ITEMS'
			</combobox>
			<text width-request="30"><label>""</label></text>
			</hbox>

		</frame>
		
		<frame SOUND OPTIONS>

			<hbox>
			<checkbox>
			<label>Enable Sound</label>
			<variable>SOUND</variable>
			<default>"'$SOUND'"</default>
			</checkbox>
			<text width-request="30"><label>""</label></text>
			</hbox>

			<hbox>
			<text><label>Sound Driver:</label></text>
			<combobox tooltip-text="Choose a hardware thing, or none">
			<variable>SNDDRV</variable>
				'$SNDDRV_ITEMS'
			</combobox>
			<text width-request="30"><label>""</label></text>
			</hbox>

			<text height-request="5"><label>""</label></text>
			<hbox>
			<text><label>Sync w/ Sound:</label></text>
			<combobox tooltip-text="Is Yes, the game will run tied to the same speed of the sound" width-request="75">
			<variable>SYNCSOUND</variable>
				'$SYNCSOUND_ITEMS'
			</combobox>
			<text width-request="30"><label>""</label></text>
			</hbox>

		</frame>
		
		<frame OTHER OPTIONS>

			<hbox>
				<text><label>"Custom options"</label></text>
				<entry editable="true" left_margin="10">
				<variable>TAGS</variable>
				<default>"'$TAGS'"</default>
				</entry>
				<text width-request="30"><label>""</label></text>
			</hbox>
		
		</frame>

	</frame>

</vbox>

## H E L P
  <vbox>
	<edit can-focus="no" editable="false" indent="15">
		<variable>EDITOR</variable>
		<width>350</width><height>150</height>
		<default>"'$SNES_BACKEND' Help:
=======================
Use the ESCAPE key to show or hide the snes9x menu!

'$SNES_BACKEND' Controls:

Emulator controls:

F12		Quit
----------------------------------

Player 1

W,S,A,D		up, down, left, right
B			B button
N			A button
V			Y button
G			X button
C			L button
M			R button
Enter		Start button
R_Shift		Select button

----------------------------------
Player 2

Cursor keys	up, down, left, right
(all keys below on numpad)
2			B button
3			A button
1			Y button
5			X button
4			L button
6			R button
Enter		Start button
Plus		Select button


Emulator Controls:

Escape			Show or hide the menu
Ctrl+f			Toggle fullscreen
Ctrl+p			Pause
Ctrl+m			Toggle mute sound
Ctrl+t			Toggle Turbo
Ctrl+r			Reset the SNES
F1				Save to slot 0
F2				Save to slot 1
F3				Save to slot 2
F4				Save to slot 3
Shift+F1			Load from slot 0
Shift+F2			Load from slot 1
Shift+F3			Load from slot 2
Shift+F4			Load from slot 3
F12		Quit

All settings can be configured through the menu

The settings are saved in /root/.snes9x/snes9x.xml"</default>
	</edit>		
  </vbox>

 </notebook>

## B U T T O N S

	<hbox height-request="30">
		<button use-stock="true" label="gtk-save" tootlip-text="Save your emulator settings">
			<variable>SAVE_SETTINGS</variable>
			<action>write_config; Xdialog --title "Settings Saved" --msgbox "Settings saved to $CONFIG" 0 0</action>
		</button>
		<button use-stock="true" label="gtk-help" tooltip-text="View all usage options for this emulator">
		    <action>defaulttexteditor /usr/share/doc/snes/readme.txt &</action>	
		</button>
		<button use-stock="true" label="gtk-quit" tooltip-text="Exit this frontend">
			<action>if [ "$FULLGUI" != "" ];then exec paloader -sk '$FSGUI' & sleep 0.6; fi</action>
			<action type="exit">EXIT_NOW</action>
		</button>
	</hbox>
 </vbox>
</window>'
}

### run gui ####
export pasnes="`echo "$S" | sed -e 's/##.*//'`"  #I use double hash (##) for comments. Colors are defined as #FF0000
gtkdialog -p pasnes $FULLSCREENGUI # $FULLSCREENGUI contains (or not) --class=jwm-maximized and must be defined in jwm configuration to get window maximized
unset pasnes

# if NOT returning to the main menu ($FULLGUI=""), remove the rejoystick profile.. kill it to be safe... 
# and then we must use xdotool to quit the output of the joypad when rejoystick exits.. 
# if we dont do this, rejoystick/the joypad floods the next process/app/etc with a load of keypresses
if [ "$FULLGUI" = "" ];then
	kill_rejoystick
fi

exit 0
