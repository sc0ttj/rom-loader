#!/bin/sh

###### initial setup vars and cli interface #####
{
# enable joypad rom browsing
rejoystick1cc --load --profile romloader &>/dev/null
rejoystick2cc --load --profile romloader &>/dev/null

#get settigns for this gui
export WORKDIR=$HOME/.paloader/tmp
export CONFIG=$HOME/.paloader/paatari++rc
# set some vars as defaults for paatari++ command line interface
export FULLGUI=''
export FSGUI=''
export FULLSCREENGUI='';
export DECORATED='decorated="true"'

##
# for the build_chooser function, used by this script to browse files and dirs
export EXT_LIST="\.bin$|\.a52$|\.atr$|\.zip$"  # goes in a `grep -iE "$EXT_LIST"` command to filter out unwanted filetypes in build_chooser_list, keep only those listed
# get the guiname .. can use it to create game specific configs for each backend
export SELF="`basename "$0"`"
# $SYSTEM is used by func_build_chooser_list to choose the correct pupromdb file and descr dir
SYSTEM="`cat /root/.paloader/rclist.txt |grep -m1 \"|${SELF}$\" |cut -f1 -d'|'`" #example: snes or atari2600 or pce
#now we need to make it upper case
export SYSTEM="${SYSTEM^^}" # ... note "${SYSTEM,,}" would force lower case
export ROMFILE='' # the file to load up on program start
export ROMICON='cartridge_atari' # the icon file in /usr/share/pixmaps/ to use for this system

# set command line options
while [ $# != 0 ]; do
   I=1
   while [ $I -le `echo $# | wc -c` ]; do
      case $1 in
         -rom) [ -f "$2" ] && ROMFILE="$2" || ROMFILE='' ;;
         -fgui) FULLGUI="true";;
         -f|--fullscreen) FSGUI="-f "; FULLSCREENGUI="--class=jwm-maximized"; DECORATED="decorated=\"false\"";;
         -v|--version)echo "paatari++ $VERSION"; exit;;
         -h|--help)
echo 'Usage: paatari++ [OPTION]

Options
  -romfile	    Load up the given rom on program startup (give full path)
  -f    		Start the rom loader GUI in fullscreen
  -h    		Show this help message'; exit;;
         #if the given option is a file, assign to $ROMFILE, we will autoload it
         *) [ -f "$1" ] && ROMFILE="$1";;
      esac
      shift
      I=$[$I+1]
   done
done

}

######  load config file or defaults #####
{
#check if config exists
if [ ! -f $CONFIG ]; then #no config - set default values
	mkdir -p $WORKDIR 2> /dev/null
	DIR="$HOME" #default browser dir
	MACHINE="800"
	BASIC=Default
	MODE=Default
	FS=true
	DBUFFER=true
	SOUND=Default
else
	. $CONFIG #read config file
fi

#get settings from main rom loader settings file, for theme settings and other stuff
export RCFILE=$HOME/.paloader/paloader.cfg
if [ -f "$RCFILE" ];then
	 . "$RCFILE"
fi
}

#####     F U N C T I O N S     ######
{
set -a #export all functions

# get rom loader functions
. /usr/local/rom-loader/func/func_get_resolution 			#get screen res
. /usr/local/rom-loader/func/func_set_theme					# adjust font sizes based on screen res
. /usr/local/rom-loader/func/func_sanitise_romname		# clean up rom names to be searchable
. /usr/local/rom-loader/func/func_build_chooser_list 		# needs SYSTEM and EXT_LIST set & exported near top of this file
. /usr/local/rom-loader/func/func_browser_go_to_dir		# file browsing
. /usr/local/rom-loader/func/func_browser_change_dir	# file browsing
. /usr/local/rom-loader/func/func_set_custom_config	# get the custom cfg for the current rom
. /usr/local/rom-loader/func/func_popup							# popup dialog when user lodas up a rom
. /usr/local/rom-loader/func/func_file_check 					# set boxart ($IMG_FILE), desc file,
. /usr/local/rom-loader/func/func_set_gui_height			# fill screen height
. /usr/local/rom-loader/func/func_kill_rejoystick				# a nicer way to end joypad navigation control
#for bottom panel
. /usr/local/rom-loader/func/func_get_rom_descr 			# needs $CHOOSER, sets $desc_file
. /usr/local/rom-loader/func/func_set_rom_descr 			# needs $DIR$CHOOSER and $desc_file
. /usr/local/rom-loader/func/func_edit_rom_details 		#needs $romname
. /usr/local/rom-loader/func/func_get_rom_boxart 		#needs $romname, sets $IMG_FILE
. /usr/local/rom-loader/func/func_set_rom_boxart 		#needs $IMG_FILE

write_config () {
	#write all variable values to config file
	echo '#paatari++ config file' > $CONFIG
	echo DIR="\"$DIR\""	 >> $CONFIG

	echo MACHINE="$MACHINE" >> $CONFIG
	echo BASIC="$BASIC" >> $CONFIG
	echo MODE="$MODE" >> $CONFIG
	echo FS="$FS" >> $CONFIG
	echo DBUFFER="$DBUFFER" >> $CONFIG
	echo SOUND="$SOUND" >> $CONFIG

	# here, we do 2 things: we get the custom config for any backends NOT being used, 
	# starting with first in list, goind down (see backend menus in Settings page), 
	# if a cfg for a non-enabled backend exists, that backend is used to auto load the rom with those custom settings
	# if no custom configs exist for non used backends, get the custom config for the currently enabled backend
	# we do this so users can set custom settings AND emulators for each ROM..
	set_custom_config
	
}

execute (){
	export GTK2_RC_FILES="$HOME/.gtkrc-2.0"	#reset gtk-theme
	
	write_config #keep settings for next startup/next game, write to config file

	C=""
	
	case $MACHINE in
	Default) C="$C" ;;
	*) C="$C -machine $MACHINE" ;;
	esac
	
	case $BASIC in
	true) C="$C -usebasic on" ;;
	false) C="$C -usebasic off" ;;
	*) C="$C" ;; 
	esac
	
	case $MODE in
	ntsc) C="$C -videomode NTSC" ;;
	pal) C="$C  -videomode PAL" ;;
	*) C="$C" ;;
	esac
	
	case $FS in
	true) C="$C -fullscreen on" ;;
	false) C="$C -fullscreen off" ;;
	*) C="$C" ;; 
	esac
	
	case $DBUFFER in
	true) C="$C -doublebuffer on" ;;
	false) C="$C -doublebuffer off" ;;
	*) C="$C" ;;
	esac
	
	case $SOUND in
	true) C="$C -enablesound on" ;;
	false) C="$C -enablesound off" ;;
	*) C="$C" ;;
	esac
	
	# enable joypad rom browsing
	rejoystick1cc --load --profile atari800 &>/dev/null
	rejoystick2cc --load --profile atari800 &>/dev/null
	unclutter -idle 1 -jitter 6 -reset -root &
	 
	 #this is the actual command
	 cd "$DIR"
	 mkdir -p /tmp/paloader
	 echo "atari++ $C -image.1 \"$DIR$CHOOSER\" -image.2 \"$DIR${CHOOSER/%1.*/2.${CHOOSER/#*.}}\" -image.3 \"$DIR${CHOOSER/%1.*/3.${CHOOSER/#*.}}\" -image.4 \"$DIR${CHOOSER/%1.*/4.${CHOOSER/#*.}}\" " > /tmp/paloader/${SELF}_cmd
	 
	 cat /tmp/paloader/${SELF}_cmd
	 
	 . /tmp/paloader/${SELF}_cmd &> /tmp/paloader/${SELF}_cmd_output
	
	# enable joypad rom browsing
	rejoystick1cc --load --profile romloader &>/dev/null
	rejoystick2cc --load --profile romloader &>/dev/null
	killall -9 unclutter &>/dev/null

}

}

#####     P R O G R A M     ######
{

#define default directory in browser
echo "$DIR" > $WORKDIR/dir
ls -1p --group-directories-first "$DIR" > $WORKDIR/ls
browser_go_to_dir

#set default text in info-field
echo 'Select a valid ROM in the browser and execute' > $WORKDIR/info
# set the default puppy arcade box art
rm /root/.paloader/tmp/boxart.jpg &>/dev/null
ln -s /usr/share/paloader/romlists/boxart/default.jpg /root/.paloader/tmp/boxart.jpg

# set the height to full height of screen if run with -if/--fullscreen
set_gui_height

#define a unique gtk-theme. This can be built really fancy. See /usr/share/themes/DeepThought/gtk-2.0/gtkrc.
#Pmusic and Pburn uses this tecnique
cat "/root/.paloader/themes/${ATARI_THEME:-$MAIN_THEME}" > /tmp/gtkrc

#get the screen res .. this will also set TITLESIZE and SUBTITELSIZE, 
# which are font sizes we update on the fly in theme files
get_resolution 
#now we update the font sizes based on current resolution
# set_theme will replace the font sizes in /tmp/gtkrc and then set the theme
set_theme

# auto run the given rom ($ROMFILE)
if [ -f "$ROMFILE" ];then #if rom was given
	# set the required vars to locate the rom
	export DIR="`dirname \"$ROMFILE\"`/"
	export CHOOSER="`basename \"$ROMFILE\"`"
	# load up the rom
	execute
	kill_rejoystick
	exit
fi

}

###### build gui #####
{
# get all arrays for combobox items
. /usr/local/rom-loader/combobox_arrays/`basename $0`

# create the file browsing gui stuff ... do it here cos gui_height and so has to be set first...
. /usr/local/rom-loader/func/func_build_chooser_gui
# usage:  build_chooser_gui $boxart_width $boxart_height
build_chooser_gui 280 200

# check for BIOS
if [ ! -e "/usr/lib/games/atari/atariosa.rom" -o ! -e "/usr/lib/games/atari/atariosb.rom" ];then
	. /usr/local/rom-loader/func/func_get_bios
	get_bios_atari
fi

#main gui
S='<window title="Puppy Arcade - Multi Atari loader (atari++)" icon-name="gtk-execute" '$DECORATED' width-request="'$SCREEN_WIDTH'" height-request="'$SCREEN_HEIGHT'">
 <vbox>
  <notebook labels="ROMs|Settings|Help">

## E X E C U T E

 '$CHOOSER_GUI'

## S E T T I N G S
  <vbox>

	<frame System options>
		<hbox>
			<text><label>Atari System:</label></text>
			<combobox width-request="120" tooltip-text="Choose the Atari system to emulate">
				<variable>MACHINE</variable>
				'$MACHINE_ITEMS'
			</combobox>
			<text width-request="15"><label>""</label></text> 
			<text><label>Enable BASIC:</label></text>
			<combobox width-request="120" tooltip-text="Enable or disable BASIC">
				<variable>BASIC</variable>
				'$BASIC_ITEMS'
			</combobox>
			<text width-request="15"><label>""</label></text> 
			<text><label>Mode:</label></text>
			<combobox width-request="120" tooltip-text="Choose the preferred video output. PAL is Europe, NTSC is USA, Japan">
				<variable>MODE</variable>
				'$MODE_ITEMS'
			</combobox>
		</hbox>
	</frame>
  
  	<frame Display options>

		<hbox>

			<checkbox tooltip-text="Enable fullscreen display">
				<label>Enable fullscreen</label>
				<variable>FS</variable>
				<default>"'$FS'"</default>
			</checkbox>
			<text width-request="15"><label>""</label></text> 
			<checkbox tooltip-text="Enable bilinear filters for smoother looking graphics">
				<label>Double BUffering</label>
				<label>Double BUffering</label>
				<variable>DBUFFER</variable>
				<default>"'$DBUFFER'"</default>
			</checkbox>
			<text width-request="15"><label>""</label></text> 

		</hbox>

	</frame>

	<frame Sound options>
		<hbox>
			<text><label>Sound:</label></text>
			<combobox width-request="120" tooltip-text="Enable or disable sound">
				<variable>SOUND</variable>
				'$SOUND_ITEMS'
			</combobox>
		</hbox>
	</frame>
  
  </vbox>
## H E L P
  <vbox>
	<edit can-focus="no" editable="false" indent="15">
		<variable>EDITOR</variable>
		<width>350</width><height>150</height>
		<default>"======================
Atari++ Controls:

Keypad keys 7,8,9,4,5,6,1,2,3
	
			are part of the keypadstick.0 device and a possible 
			emulation source for joystick input.
	
Keypad keys 0 and Enter
			
			emulate the joystick button of the device as well.
			
Emulator Controls:

	F1		graphical configuration menu
	F2		the Option console key.
	F3		the Select console key.
	F4		the Start console key.
	F5		is the Help key only on the XL and XE
	F6		Reset console key
	F7		coldstarts the system 
	F8		emulates the Break key, to stop listings
	F9		requests a screen dump,
	F10		aborts the emulator immediately, 
	F11		Pause.. and continue..
	F12		enters the on-line monitor (CAREFUL!)

Home/Clear			emulate the Shift+< sequence, enforcing a clear screen.
Insert			inserts a blank character under the cursor by emulating Ctrl+>.
					If pressed together with shift, a blank line is inserted at the current line position.
Del			removes a single character under the cursor by emulating a Ctrl+BS keyboard sequence.

Cursor Keys
			move the cursor in the indicating direction by holding either +,*,-,= and the Ctrl key down.
			This works fine most the time except for the DDT debugger which requires these keys
			pressed without Ctrl for window movement. Do not use the separate cursor keys but the
			above keys directly for DDT.
	
Esc			emulates, as expected, the ESC key on the Atari keypad.
	
ALT			emulates the Atari or InverseVideo key.
For some implementations, this key is also emulated by the Windows key.

All other keys have their natural key binding except for the 5200
	
===================
KEYBOARD INPUT FOR THE 5200

The following keyboard keys act differently on the 5200 system:

F2				is the “Reset” key on the keypad of the controller.
F3				is the “Pause” key on the keypad.
F4				is the “Start” key; it typically launches the game.
keys 0..9		activate the corresponding keypad keys.
	
H or #			emulates the hash-mark on the keypad controller key.
S or *			emulates the asterisk on the controller keypad.
Shift				acts as the second trigger button on all external controller keypads.

F2 thru F12			act as usual, see the list above.

all other keys			are blind and perform no operation in the 5200 emulation mode.
  
"</default>
	</edit>		
  </vbox>

 </notebook>

## B U T T O N S

	<hbox height-request="30">
		<button use-stock="true" label="gtk-save" tootlip-text="Save your emulator settings">
			<variable>SAVE_SETTINGS</variable>
			<action>write_config; Xdialog --title "Settings Saved" --msgbox "Settings saved to $CONFIG" 0 0</action>
		</button>
		<button use-stock="true" label="gtk-help" tooltip-text="View all usage options for this emulator">
		    <action>defaulttexteditor /usr/share/doc/atari++/README /usr/share/doc/atari++/USAGE &</action>	
		</button>
		<button use-stock="true" label="gtk-quit" tooltip-text="Exit this frontend">
			<action>if [ "$FULLGUI" != "" ];then exec paloader -sk '$FSGUI' & sleep 0.6; fi</action>
			<action type="exit">EXIT_NOW</action>
		</button>
	</hbox>
 </vbox>
</window>'
}

### run gui ####
export paatarigui="`echo "$S" | sed -e 's/##.*//'`"  #I use double hash (##) for comments. Colors are defined as #FF0000
gtkdialog3 -p paatarigui $FULLSCREENGUI # $FULLSCREENGUI contains (or not) --class=jwm-maximized and must be defined in jwm configuration to get window maximized
unset paatarigui

# if NOT returning to the main menu ($FULLGUI=""), remove the rejoystick profile.. kill it to be safe... 
# and then we must use xdotool to quit the output of the joypad when rejoystick exits.. 
# if we dont do this, rejoystick/the joypad floods the next process/app/etc with a load of keypresses
if [ "$FULLGUI" = "" ];then
	kill_rejoystick
fi

exit 0
