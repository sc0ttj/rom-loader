#!/bin/sh

###### initial setup vars and cli interface #####
# enable joypad support
rejoystick1cc --load --profile romloader &>/dev/null
rejoystick2cc --load --profile romloader &>/dev/null

#make some shortcuts. Most for easy typing, but also for flexibility
export WORKDIR=$HOME/.paloader/tmp
export CONFIG=$HOME/.paloader/pafusionrc
# set some vars as defaults
export FULLSCREENGUI='';
export FULLGUI=''
export FSGUI=''
export DECORATED='decorated="true"'

##
# for the build_chooser function, used by this script to browse files and dirs
export EXT_LIST="\.smd$|\.gen$|\.gg$|\.sms$|\.bin$|\.fig$|\.32x$|\.cue$|\.iso$"  # goes in a `grep -iE "$EXT_LIST"` command to filter out unwanted filetypes in build_chooser_list, keep only those listed
# get the guiname .. can use it to create game specific configs for each backend
export SELF="`basename "$0"`"
# $SYSTEM is used by func_build_chooser_list to choose the correct pupromdb file and descr dir
SYSTEM="`cat /root/.paloader/rclist.txt |grep -m1 \"|${SELF}$\" |cut -f1 -d'|'`" #example: snes or atari2600 or pce
#now we need to make it upper case
export SYSTEM="${SYSTEM^^}" # ... note "${SYSTEM,,}" would force lower case
export SYSTITLE="SEGA (Multi)"
export ROMFILE='' # the file to load up on program start
export ROMICON='cartridge_genesis' # the icon file in /usr/share/pixmaps/ to use for this system

# set command line options
while [ $# != 0 ]; do
   I=1
   while [ $I -le `echo $# | wc -c` ]; do
      case $1 in
         -rom) [ -f "$2" ] && ROMFILE="$2" || ROMFILE='' ;;
         -fgui) FULLGUI="true";;
         -f|--fullscreen) FSGUI="-f "; FULLSCREENGUI="--class=jwm-maximized"; DECORATED="decorated=\"false\"";;
         -v|--version)echo "pafusion $VERSION"; exit;;
         -h|--help)
echo 'Usage: '$SELF' [OPTION]

Options
  -romfile	    Load up the given rom on program startup (give full path)
  -f    Start the rom loader GUI in fullscreen
  -h    Show this help message'; exit;;
         #if the given option is a file, assign to $ROMFILE, we will autoload it
         *) [ -f "$1" ] && ROMFILE="$1";;
      esac
      shift
      I=$[$I+1]
   done
done

#check if config exists
if [ ! -f $CONFIG ]; then #no config - set default values
	mkdir -p $WORKDIR 2> /dev/null
	DIR="$HOME" #default browser dir
	GENDIR="$HOME" #default browser dir
	SEGA32XDIR="$HOME" #32x
	SEGACDDIR="$HOME" #default browser dir
	GGDIR="$HOME" #default browser dir
	SMSDIR="$HOME" #default browser dir
	#system
	SMSBIOS=Default
	PERFECTSYNC=Default
	DISABLE32X=Default
	#graphics
	GGZOOM=Default
	GENBORDER=Default
	SEGACDLEDS=Default
	FS=Default
	NTSCASPECT=Default
	FIXEDASPECT=Default
	SCANLINES=Default
	RENDERMODE=Default
	FILTERED=Default
	VSYNC=Default
	SHOWFPS=Default
	#sound
	ALSA=Default
	SOUND=Default
	HQSOUND=Default
	SOUNDQUAL=Default
else
	. $CONFIG #read config file
fi

#get settings from main rom loader settings file, for theme settings and other stuff
export RCFILE=$HOME/.paloader/paloader.cfg
if [ -f "$RCFILE" ];then
	 . "$RCFILE"
fi

case "$SELF" in 
	pafusiongen) EXT_LIST="\.smd$|\.gen$|\.gg$|\.sms$|\.bin$|\.fig$|\.32x$|\.cue$|\.iso$"; SYSTEM=GEN; THEME="$GEN_THEME"; ROMICON="cartridge_genesis"; SYSTITLE="SEGA Genesis"; DIR="${GENDIR:-$HOME}";;
	pafusion32x) EXT_LIST="\.32x$|\.bin$"; SYSTEM=SEGA32X; THEME="$SEGA32X_THEME"; ROMICON="cartridge_genesis"; SYSTITLE="Sega 32X"; DIR="${SEGA32XDIR:-$HOME}";;
	pafusioncd) EXT_LIST="\.cue$|\.iso$|\.bin$"; SYSTEM=SEGACD; THEME="$SEGACD_THEME"; ROMICON="rom"; SYSTITLE="Sega CD"; DIR="${SEGACDDIR:-$HOME}";;
	pafusiongg) EXT_LIST="\.gg$|\.bin$"; SYSTEM=GAMEGEAR; THEME="$SEGA8BIT_THEME"; ROMICON="cartridge_gamegear"; SYSTITLE="Sega GameGear"; DIR="${GGDIR:-$HOME}";;
	pafusionsms) EXT_LIST="\.sms$|\.bin$"; SYSTEM=SMS; THEME="$SEGA8BIT_THEME"; ROMICON="cartridge_sms"; SYSTITLE="Sega Master System"; DIR="${SMSDIR:-$HOME}";;
	pafusion) EXT_LIST="\.smd$|\.gen$|\.gg$|\.sms$|\.bin$|\.fig$|\.32x$|\.cue$|\.iso$"; SYSTEM=GEN; THEME="$GEN_THEME"; ROMICON="cartridge_genesis"; SYSTITLE="SEGA (Multi)"; DIR="${GENDIR:-$HOME}";;
esac
export EXT_LIST
export SYSTEM
export THEME
export ROMICON
export SYSTITLE
export DIR

#####     F U N C T I O N S     ######

set -a #export all functions

# get rom loader functions
. /usr/local/rom-loader/func/func_get_resolution 			#get screen res
. /usr/local/rom-loader/func/func_set_theme					# adjust font sizes based on screen res
. /usr/local/rom-loader/func/func_sanitise_romname		# clean up rom names to be searchable
. /usr/local/rom-loader/func/func_build_chooser_list 		# needs SYSTEM and EXT_LIST set & exported near top of this file
. /usr/local/rom-loader/func/func_browser_go_to_dir		# file browsing
. /usr/local/rom-loader/func/func_browser_change_dir	# file browsing
. /usr/local/rom-loader/func/func_set_custom_config	# get the custom cfg for the current rom
. /usr/local/rom-loader/func/func_popup							# popup dialog when user lodas up a rom
. /usr/local/rom-loader/func/func_file_check 					# set boxart ($IMG_FILE), desc file,
. /usr/local/rom-loader/func/func_set_gui_height			# fill screen height
. /usr/local/rom-loader/func/func_kill_rejoystick				# a nicer way to end joypad navigation control
#for bottom panel
. /usr/local/rom-loader/func/func_get_rom_descr 			# needs $CHOOSER, sets $desc_file
. /usr/local/rom-loader/func/func_set_rom_descr 			# needs $DIR$CHOOSER and $desc_file
. /usr/local/rom-loader/func/func_edit_rom_details 		#needs $romname
. /usr/local/rom-loader/func/func_get_rom_boxart 		#needs $romname, sets $IMG_FILE
. /usr/local/rom-loader/func/func_set_rom_boxart 		#needs $IMG_FILE

write_config () {
	#write all variable values to config file
	echo '#pafusion config file' > $CONFIG
	echo DIR="\"$DIR\""	 >> $CONFIG
	# keep all dirs for each system the same (if not running for a system, it wont have it dir reset)
	echo GENDIR="\"$GENDIR\""	 >> $CONFIG
	echo SEGA32XDIR="\"$SEGA32XDIR\""	 >> $CONFIG
	echo SEGACDDIR="\"$SEGACDDIR\""	 >> $CONFIG
	echo GGDIR="\"$GGDIR\""	 >> $CONFIG
	echo SMSDIR="\"$SMSDIR\""	 >> $CONFIG
	#system
	echo SMSBIOS="$SMSBIOS"	 >> $CONFIG
	echo PERFECTSYNC="$PERFECTSYNC"	 >> $CONFIG
	echo DISABLE32X="$DISABLE32X"	 >> $CONFIG
	#graphics
	echo GGZOOM="$GGZOOM"	 >> $CONFIG
	echo GENBORDER="$GENBORDER"	 >> $CONFIG
	echo SEGACDLEDS="$SEGACDLEDS"	 >> $CONFIG
	echo FS="$FS"	 >> $CONFIG
	echo NTSCASPECT="$NTSCASPECT"	 >> $CONFIG
	echo FIXEDASPECT="$FIXEDASPECT"	 >> $CONFIG
	echo SCANLINES="$SCANLINES"	 >> $CONFIG
	echo RENDERMODE="$RENDERMODE"	 >> $CONFIG
	echo FILTERED="$FILTERED"	 >> $CONFIG
	echo VSYNC="$VSYNC"	 >> $CONFIG
	echo SHOWFPS="$SHOWFPS"	 >> $CONFIG
	#sound
	echo ALSA="$ALSA"	 >> $CONFIG
	echo SOUND="$SOUND"	 >> $CONFIG
	echo HQSOUND="$HQSOUND"	 >> $CONFIG
	echo SOUNDQUAL="$SOUNDQUAL"	 >> $CONFIG

	# now update the current system with last used dir (remove value from above, and update)
	case "$SELF" in 
		pafusiongen) echo "`cat \"$CONFIG\" | grep -v '^GENDIR='`" > $CONFIG; echo GENDIR="\"$DIR\"" >> $CONFIG ;;
		pafusion32x) echo "`cat \"$CONFIG\" | grep -v '^SEGA32XDIR='`" > $CONFIG; echo SEGA32XDIR="\"$DIR\"" >> $CONFIG ;;
		pafusioncd) echo "`cat \"$CONFIG\" | grep -v '^SEGACDDIR='`" > $CONFIG; echo SEGACDDIR="\"$DIR\"" >> $CONFIG ;;
		pafusiongg) echo "`cat \"$CONFIG\" | grep -v '^GGDIR='`" > $CONFIG; echo GGDIR="\"$DIR\"" >> $CONFIG ;;
		pafusionsms) echo "`cat \"$CONFIG\" | grep -v '^SMSDIR='`" > $CONFIG; echo SMSDIR="\"$DIR\"" >> $CONFIG ;;
		pafusion) echo "`cat \"$CONFIG\" | grep -v '^GENDIR='`" > $CONFIG; echo GENDIR="\"$DIR\"" >> $CONFIG ;;
	esac

	#edit config file below ... 
	
	#system

	case $SMSBIOS in 
	  	true) 		sed -i "s|SMSBIOSDisable=1|SMSBIOSDisable=0|g" '/root/.Kega Fusion/Fusion.ini' ;;
		false) 	sed -i "s|SMSBIOSDisable=0|SMSBIOSDisable=1|g" '/root/.Kega Fusion/Fusion.ini' ;;
	esac 

	case $PERFECTSYNC in #for segacd
		true) 		sed -i "s|PerfectSync=0|PerfectSync=1|g" '/root/.Kega Fusion/Fusion.ini' ;;
	  	false) 	sed -i "s|PerfectSync=1|PerfectSync=0|g" '/root/.Kega Fusion/Fusion.ini' ;;
	esac 

	case $DISABLE32X in 
		true) 		sed -i "s|Disable32X=0|Disable32X=1|g" '/root/.Kega Fusion/Fusion.ini' ;;
	  	false) 	sed -i "s|Disable32X=1|Disable32X=0|g" '/root/.Kega Fusion/Fusion.ini' ;;
	esac 

	#graphics
	
	case $GGZOOM in 
		true) 		sed -i "s|GameGearZoom=0|GameGearZoom=1|g" '/root/.Kega Fusion/Fusion.ini' ;;
	  	false) 	sed -i "s|GameGearZoom=1|GameGearZoom=0|g" '/root/.Kega Fusion/Fusion.ini' ;;
	esac 

	case $GENBORDER in 
		true) 		sed -i "s|GenBorderDisable=1|GenBorderDisable=0|g" '/root/.Kega Fusion/Fusion.ini' ;;
	  	false) 	sed -i "s|GenBorderDisable=0|GenBorderDisable=1|g" '/root/.Kega Fusion/Fusion.ini' ;;
	esac 

	case $SEGACDLEDS in 
		true) 		sed -i "s|LEDEnabled=0|LEDEnabled=1|g" '/root/.Kega Fusion/Fusion.ini' ;;
	  	false) 	sed -i "s|LEDEnabled=1|LEDEnabled=0|g" '/root/.Kega Fusion/Fusion.ini' ;;
	esac 

	case $FS in 
		true) 		sed -i "s|FullScreen=0|FullScreen=1|g" '/root/.Kega Fusion/Fusion.ini' ;;
	  	false) 	sed -i "s|FullScreen=1|FullScreen=0|g" '/root/.Kega Fusion/Fusion.ini' ;;
	esac 

	case $NTSCASPECT in 
		true) 		sed -i "s|DNTSCAspect=0|DNTSCAspect=1|g" '/root/.Kega Fusion/Fusion.ini' ;;
	  	false) 	sed -i "s|DNTSCAspect=1|DNTSCAspect=0|g" '/root/.Kega Fusion/Fusion.ini' ;;
	esac 

	case $FIXEDASPECT in 
		fit) 			sed -i "s|DFixedAspect=0|DFixedAspect=1|g" '/root/.Kega Fusion/Fusion.ini'
						sed -i "s|DFixedZoom=1|DFixedZoom=0|g" '/root/.Kega Fusion/Fusion.ini' ;;
	  	
	  	zoom) 	sed -i "s|DFixedAspect=1|DFixedAspect=0|g" '/root/.Kega Fusion/Fusion.ini'
	  					sed -i "s|DFixedZoom=0|DFixedZoom=1|g" '/root/.Kega Fusion/Fusion.ini' ;;
	  	
	  	disabled) 	sed -i "s|DFixedAspect=0|DFixedAspect=0|g" '/root/.Kega Fusion/Fusion.ini'
	  						sed -i "s|DFixedZoom=0|DFixedZoom=0|g" '/root/.Kega Fusion/Fusion.ini' ;;
	esac 

	OLDSCANLINES="`cat '/root/.Kega Fusion/Fusion.ini' | grep -w DScanlines | cut -f2 -d'='`"
	case $SCANLINES in 
		none)		sed -i "s|DScanlines=$OLDSCANLINES|DScanlines=4|g" '/root/.Kega Fusion/Fusion.ini' ;;
		25*)		sed -i "s|DScanlines=$OLDSCANLINES|DScanlines=3|g" '/root/.Kega Fusion/Fusion.ini' ;;
		50*)		sed -i "s|DScanlines=$OLDSCANLINES|DScanlines=2|g" '/root/.Kega Fusion/Fusion.ini' ;;
		75*)		sed -i "s|DScanlines=$OLDSCANLINES|DScanlines=1|g" '/root/.Kega Fusion/Fusion.ini' ;;
		100*)		sed -i "s|DScanlines=$OLDSCANLINES|DScanlines=0|g" '/root/.Kega Fusion/Fusion.ini' ;;
	esac 

	case $RENDERMODE in 
		normal) 	sed -i "s|DRenderMode=1|DRenderMode=0|g" '/root/.Kega Fusion/Fusion.ini' ;;
	  	tv) 				sed -i "s|DRenderMode=0|DRenderMode=1|g" '/root/.Kega Fusion/Fusion.ini' ;;
	esac 

	case $FILTERED in 
		true) 		sed -i "s|DFiltered=0|DFiltered=1|g" '/root/.Kega Fusion/Fusion.ini' ;;
	  	false) 	sed -i "s|DFiltered=1|DFiltered=0|g" '/root/.Kega Fusion/Fusion.ini' ;;
	esac 

	case $VSYNC in 
		true) 		sed -i "s|VSyncEnabled=0|VSyncEnabled=1|g" '/root/.Kega Fusion/Fusion.ini' ;;
	  	false) 	sed -i "s|VSyncEnabled=1|VSyncEnabled=0|g" '/root/.Kega Fusion/Fusion.ini' ;;
	esac 

	case $SHOWFPS in 
		true) 		sed -i "s|FPSEnabled=0|FPSEnabled=1|g" '/root/.Kega Fusion/Fusion.ini' ;;
	  	false) 	sed -i "s|FPSEnabled=1|FPSEnabled=0|g" '/root/.Kega Fusion/Fusion.ini' ;;
	esac 

	# sound
	
	case $ALSA in 
		true) 		sed -i "s|UsingALSA=0|UsingALSA=1|g" '/root/.Kega Fusion/Fusion.ini' ;;
	  	false) 	sed -i "s|Render Opengl=1|Render Opengl=0|g" '/root/.Kega Fusion/Fusion.ini' ;;
	esac 

	case $HQSOUND in 
		true) 		sed -i "s|SoundSuperHQ=0|SoundSuperHQ=1|g" '/root/.Kega Fusion/Fusion.ini' ;;
	  	false) 	sed -i "s|SoundSuperHQ=1|SoundSuperHQ=0|g" '/root/.Kega Fusion/Fusion.ini' ;;
	esac 

	case $SOUND in 
		true) 		sed -i "s|SoundDisabled=1|SoundDisabled=0|g" '/root/.Kega Fusion/Fusion.ini' ;;
	  	false) 	sed -i "s|SoundDisabled=0|SoundDisabled=1|g" '/root/.Kega Fusion/Fusion.ini' ;;
	esac 

	case $SOUNDQUAL in 
		22050) 	sed -i "s|CurrentWaveFormat=2|CurrentWaveFormat=1|g" '/root/.Kega Fusion/Fusion.ini' ;;
	  	44100) 	sed -i "s|CurrentWaveFormat=1|CurrentWaveFormat=2|g" '/root/.Kega Fusion/Fusion.ini' ;;
	esac 

	# here, we do 2 things: we get the custom config for any backends NOT being used, 
	# starting with first in list, goind down (see backend menus in Settings page), 
	# if a cfg for a non-enabled backend exists, that backend is used to auto load the rom with those custom settings
	# if no custom configs exist for non used backends, get the custom config for the currently enabled backend
	# we do this so users can set custom settings AND emulators for each ROM..
	set_custom_config
	
}

execute (){
	export GTK2_RC_FILES="$HOME/.gtkrc-2.0"	#reset gtk-theme
	write_config #keep settings for next startup

	#fusion wont load up in fullscreen on its own, no idea why... 
	# so lets force it.. using xdotool ... (ESCAPE toggles fs or not, so lets press it)..
	if [ "$FS" = true ];then
		set_fs(){
			sleep 1
			xdotool key --clearmodifiers --delay 100 Escape
			exit 0
		}
	else
		set_fs (){
			echo ''
		}
	fi

	# enable joypad support
	rejoystick1cc --load --profile fusion &>/dev/null
	rejoystick2cc --load --profile fusion &>/dev/null
	unclutter -idle 1 -jitter 6 -reset -root &

	# THE ACTUAL, FINAL COMMAND
	mkdir -p /tmp/paloader
	echo "fusion \"$DIR$CHOOSER\""  > /tmp/paloader/${SELF}_cmd
	[ "$FS" = true ] && set_fs &
	. /tmp/paloader/${SELF}_cmd &> /tmp/paloader/${SELF}_cmd_output
	
	# enable joypad support
	rejoystick1cc --load --profile romloader &>/dev/null
	rejoystick2cc --load --profile romloader &>/dev/null
	killall -9 unclutter &>/dev/null

}

#####     P R O G R A M     ######


#define default directory in browser
echo "$DIR" > $WORKDIR/dir
ls -1p --group-directories-first "$DIR" > $WORKDIR/ls
browser_go_to_dir

#set default text in info-field
echo -e 'Select a valid ROM the browser and execute' > $WORKDIR/info
# set the default puppy arcade box art
rm /root/.paloader/tmp/boxart.jpg &>/dev/null
ln -s /usr/share/paloader/romlists/boxart/default.jpg /root/.paloader/tmp/boxart.jpg

# set the height to full height of screen if run with -if/--fullscreen
set_gui_height

#define a unique gtk-theme. This can be built really fancy. See /usr/share/themes/DeepThought/gtk-2.0/gtkrc.
#Pmusic and Pburn uses this tecnique
cat "/root/.paloader/themes/${THEME:-$MAIN_THEME}" > /tmp/gtkrc

#get the screen res .. this will also set TITLESIZE and SUBTITELSIZE, 
# which are font sizes we update on the fly in theme files
get_resolution 
#now we update the font sizes based on current resolution
# set_theme will replace the font sizes in /tmp/gtkrc and then set the theme
set_theme

# auto run the given rom ($ROMFILE)
if [ -f "$ROMFILE" ];then #if rom was given
	# set the required vars to locate the rom
	export DIR="`dirname \"$ROMFILE\"`/"
	export CHOOSER="`basename \"$ROMFILE\"`"
	# load up the rom
	execute
	kill_rejoystick
	exit
fi

# get all arrays for combobox items
. /usr/local/rom-loader/combobox_arrays/pafusion

# create the file browsing gui stuff ... do it here cos gui_height and so has to be set first...
. /usr/local/rom-loader/func/func_build_chooser_gui
# usage:  build_chooser_gui $boxart_width $boxart_height
build_chooser_gui 280 200

# check for BIOS
BIOS_FILE_CHECK='skip'
BIOS_FUNC=''
case ${SYSTEM^^} in
SEGACD) BIOS_FILE_CHECK='/usr/lib/games/segacd/us_scd1_9210.bin' ; BIOS_FUNC='get_bios_segacd' ;;
esac
if [ ! -f "$BIOS_FILE_CHECK" -a "$BIOS_FILE_CHECK" != "skip" ];then
	. /usr/local/rom-loader/func/func_get_bios
	$BIOS_FUNC 
fi

#build gui
S='
<window title="Puppy Arcade - Fusion loader ('$SYSTITLE')" icon-name="gtk-execute" '$DECORATED' width-request="'$SCREEN_WIDTH'" height-request="'$SCREEN_HEIGHT'">
 <vbox>

	<entry visible="false">
	<variable>GENDIR</variable>
	<default>"'$GENDIR'"</default>
	<visible>disabled</visible>
	</entry>

	<entry visible="false">
	<variable>SEGA32XDIR</variable>
	<default>"'$SEGA32XDIR'"</default>
	<visible>disabled</visible>
	</entry>

	<entry visible="false">
	<variable>SEGACDDIR</variable>
	<default>"'$SEGACDDIR'"</default>
	<visible>disabled</visible>
	</entry>

	<entry visible="false">
	<variable>GGDIR</variable>
	<default>"'$GGDIR'"</default>
	<visible>disabled</visible>
	</entry>

	<entry visible="false">
	<variable>SMSDIR</variable>
	<default>"'$SMSDIR'"</default>
	<visible>disabled</visible>
	</entry>

    <notebook labels="ROMs|Settings|Help">


## E X E C U T E

 '$CHOOSER_GUI'


## S E T T I N G S

	<vbox>

		<frame System Settings>
			<hbox>
				<text><label>SMS BIOS:</label></text>
				<combobox width-request="130" tooltip-text="Enable or disable the SMS BIOS... You dont need them enabled, and Fusion works best without them. If you do enable this option, you will need to edit /root/.Kega Fusion/Fusion.ini, and update the path to the BIOS file.">
					<variable>SMSBIOS</variable>
					'$SMSBIOS_ITEMS'
				</combobox>
				<text><label>Perfect Sync:</label></text>
				<combobox width-request="130" tooltip-text="For SEGA CD, may improve timing of emulation.">
					<variable>PERFECTSYNC</variable>
					'$PERFECTSYNC_ITEMS'
				</combobox>
			</hbox>
			<hbox>
				<text><label>Disable 32X:</label></text>
				<combobox width-request="130" tooltip-text="Some ROMs or games are apparently both 32X and Genesis games, so you can enable or disable the 32X to get both versions of the game.">
					<variable>DISABLE32X</variable>
					'$DISABLE32X_ITEMS'
				</combobox>
			</hbox>
		</frame>

		<frame Graphics Settings>
			<hbox>

				<vbox>
					<text><label>GameGear Zoom:</label></text>
					<combobox width-request="130" tooltip-text="Zoom gamegear games to fill the whole screen or not... If not, a nice GameGear border will be displayed around the game window instead..">
						<variable>GGZOOM</variable>
						'$GGZOOM_ITEMS'
					</combobox>

					<text><label>Genesis Border:</label></text>
					<combobox width-request="130" tooltip-text="Show a border around Genesis games or not.">
						<variable>GENBORDER</variable>
						'$GENBORDER_ITEMS'
					</combobox>

					<text><label>Sega CD LEDs:</label></text>
					<combobox width-request="130" tooltip-text="Show Sega CD LEDs .. This is useful for knowing when to safely change discs, with multi disc games. (see Fusion readme) ">
						<variable>SEGACDLEDS</variable>
						'$SEGACDLEDS_ITEMS'
					</combobox>

					<text><label>Fullscreen:</label></text>
					<combobox width-request="130" tooltip-text="Enable fullscreen, or windowed mode if this is false">
						<variable>FS</variable>
						'$FS_ITEMS'
					</combobox>

				</vbox>
				<text width-request="20"><label>""</label></text>
				<vbox>

					<text><label>NTSC Aspect Ratio:</label></text>
					<combobox width-request="130" tooltip-text="Force NTSC aspect ratio. Generally good for non EU displays and ROMs.">
						<variable>NTSCASPECT</variable>
						'$NTSCASPECT_ITEMS'
					</combobox>

					<text><label>Fixed Aspect Ratio:</label></text>
					<combobox width-request="130" tooltip-text="Fix the aspect ratio to the games original or not.">
						<variable>FIXEDASPECT</variable>
						'$FIXEDASPECT_ITEMS'
					</combobox>

					<text><label>Scanlines:</label></text>
					<combobox width-request="130" tooltip-text="Choose the amount of scanlines you want to have on screen.">
						<variable>SCANLINES</variable>
						'$SCANLINES_ITEMS'
					</combobox>

					<text><label>Render Mode:</label></text>
					<combobox width-request="130" tooltip-text="Choose normal, or choose an fake TV effect">
						<variable>RENDERMODE</variable>
						'$RENDERMODE_ITEMS'
					</combobox>

				</vbox>
				<text width-request="20"><label>""</label></text>
				<vbox>

					<text><label>Filtered:</label></text>
					<combobox width-request="130" tooltip-text="Filtered output enables smoother graphics">
						<variable>FILTERED</variable>
						'$FILTERED_ITEMS'
					</combobox>

					<text><label>Vsync:</label></text>
					<combobox width-request="130" tooltip-text="Synv the refresh rates of the emulator with the screen (may affect performance), may do nothing depending on your gfx card settings.">
						<variable>VSYNC</variable>
						'$VSYNC_ITEMS'
					</combobox>

					<text><label>Show FPS:</label></text>
					<combobox width-request="130" tooltip-text="Show frames per second on screen">
						<variable>SHOWFPS</variable>
						'$SHOWFPS_ITEMS'
					</combobox>
				</vbox>

			</hbox>

		</frame>

		<frame Sound Settings>
			<hbox>
				<text><label>Enable Sound:</label></text>
				<combobox width-request="130" tooltip-text="Enable or disable sound output. If performance is really bad, disabling sound usually helps (that is true of most emulators).">
					<variable>SOUND</variable>
					'$SOUND_ITEMS'
				</combobox>
				<text width-request="20"><label>""</label></text>
				<text><label>Use ALSA:</label></text>
				<combobox width-request="130" tooltip-text="Use ALSA or not">
					<variable>ALSA</variable>
					'$ALSA_ITEMS'
				</combobox>
			</hbox>
			<hbox>
				<text><label>HQ Sound:</label></text>
				<combobox width-request="130" tooltip-text="Enable High Quality (HQ) Sound emulation or not">
					<variable>HQSOUND</variable>
					'$HQSOUND_ITEMS'
				</combobox>
				<text width-request="5"><label>""</label></text>
				<text><label>Quality (Hz):</label></text>
				<combobox width-request="130" tooltip-text="Lower means worse sound but better performance.">
					<variable>SOUNDQUAL</variable>
					'$SOUNDQUAL_ITEMS'
				</combobox>
			</hbox>
		</frame>

	</vbox>
		
	## H E L P
	<vbox>
		<edit can-focus="no" editable="false" indent="15">
		<variable>EDITOR</variable>
		<width>350</width><height>150</height>
		<default>"Fusion Help:
=======================
Emulator controls:

Alt-F4		Quit
----------------------------------
In-game controls:

Player 1

W,S,A,D		up, down, left, right
Enter		Start button
R_Shift		Select button
v			A button
b			B button
n			C button
#			Mode button
f			X button
g			Y button
h			Z button

Player 2

Cursor keys		up, down, left, right
Numpad Enter	Start button
Numpad +		Select button
Numpad 1		A button
Numpad 2		B button
Numpad 3		C button
Numpad -		Mode button
Numpad 4		X button
Numpad 5		Y button
Numpad 6		Z button
"</default>
	</edit>		
	</vbox>

	
	
</notebook>


## B U T T O N S

	<hbox>
		<button use-stock="true" label="gtk-save" tootlip-text="Save your emulator settings">
			<variable>SAVE_SETTINGS</variable>
			<action>write_config; Xdialog --title "Settings Saved" --msgbox "Settings saved to $CONFIG" 0 0</action>
		</button>
		<button use-stock="true" label="gtk-help" tooltip-text="View all usage options for this emulator">
		    <action>rox /usr/share/doc/gens &</action>	
		</button>
		<button use-stock="true" label="gtk-quit" tooltip-text="Exit this frontend">
			<action>if [ "$FULLGUI" != "" ];then exec paloader -sk '$FSGUI' & sleep 0.6; fi</action>
			<action type="exit">EXIT_NOW</action>
		</button>
	</hbox>
 </vbox>
</window>'

export pafusion="`echo "$S" | sed -e 's/##.*//'`"  #I use double hash (##) for comments. Colors are defined as #FF0000
gtkdialog3 -p pafusion $FULLSCREENGUI # $FULLSCREENGUI contains (or not) --class=jwm-maximized and must be defined in jwm configuration to get window maximized
unset panes

# if NOT returning to the main menu ($FULLGUI=""), remove the rejoystick profile.. kill it to be safe... 
# and then we must use xdotool to quit the output of the joypad when rejoystick exits.. 
# if we dont do this, rejoystick/the joypad floods the next process/app/etc with a load of keypresses
if [ "$FULLGUI" = "" ];then
	kill_rejoystick
fi

exit 0
